[info] Using default compilation options.

[print statement info]
DeclStmt
	[VarType] int
	[name]i

[print statement info]
DeclStmt
	[VarType] int
	[name]N

[print statement info]
WhileStmt

[INFO DealWithStmt:225] After collect initial DNF information: 

[Print DNF Information]
DNF disjunctive branch 0 and its size is:2
	[DNF Number 0 is:]
	i_initvariable_avoid_conflict = 0
	[DNF Number 1 is:]
	N_initvariable_avoid_conflict = 10
DNF disjunctive clause 0 is printed.
[Print inequality_DNF Information]
inequality_DNF disjunctive branch 0 and its size is:0
inequality_DNF disjunctive clause 0 is printed.

[Print SelfDefined DNF Information]
DNF disjunctive branch 0 and its size is:3
	[DNF Number 0 is:]
	i == N
	[DNF Number 1 is:]
	i_initvariable_avoid_conflict = 0
	[DNF Number 2 is:]
	N_initvariable_avoid_conflict = 10
DNF disjunctive clause 0 is printed.


[Print DNF Information]
DNF disjunctive branch 0 and its size is:0
DNF disjunctive clause 0 is printed.DNF disjunctive branch 1 and its size is:0
DNF disjunctive clause 1 is printed.
[Print inequality_DNF Information]
inequality_DNF disjunctive branch 0 and its size is:1
	[inequality_DNF Number 0 is:]
	i < N
inequality_DNF disjunctive clause 0 is printed.inequality_DNF disjunctive branch 1 and its size is:1
	[inequality_DNF Number 0 is:]
	i > N
inequality_DNF disjunctive clause 1 is printed.
[print statement info]
UnaryOperator
unary operator: DeclRefExpr ++ 
[INFO Out_Loop:1395] Collect Loop Transition Relation

[Print DNF Information]
DNF disjunctive branch 0 and its size is:4
	[DNF Number 0 is:]
	i = i + 1
	[DNF Number 1 is:]
	N = N
	[DNF Number 2 is:]
	N_initvariable_avoid_conflict = N_initvariable_avoid_conflict
	[DNF Number 3 is:]
	i_initvariable_avoid_conflict = i_initvariable_avoid_conflict
DNF disjunctive clause 0 is printed.DNF disjunctive branch 1 and its size is:4
	[DNF Number 0 is:]
	i = i + 1
	[DNF Number 1 is:]
	N = N
	[DNF Number 2 is:]
	N_initvariable_avoid_conflict = N_initvariable_avoid_conflict
	[DNF Number 3 is:]
	i_initvariable_avoid_conflict = i_initvariable_avoid_conflict
DNF disjunctive clause 1 is printed.
[Print inequality_DNF Information]
inequality_DNF disjunctive branch 0 and its size is:1
	[inequality_DNF Number 0 is:]
	i < N
inequality_DNF disjunctive clause 0 is printed.inequality_DNF disjunctive branch 1 and its size is:1
	[inequality_DNF Number 0 is:]
	i > N
inequality_DNF disjunctive clause 1 is printed.
[INFO Add_InitSuffix:613] N_initvariable_avoid_conflict
[INFO Add_InitSuffix:613] i_initvariable_avoid_conflict
[INFO Add_InitSuffix:613] N_initvariable_avoid_conflict
[INFO Add_InitSuffix:613] i_initvariable_avoid_conflict
[INFO Compute_and_Eliminate_Init_Poly:718] i_initvariable_avoid_conflict = 0
[INFO Compute_and_Eliminate_Init_Poly:718] N_initvariable_avoid_conflict = 10
[INFO Compute_and_Eliminate_Init_Poly:718] i_initvariable_avoid_conflict = 0
[INFO Compute_and_Eliminate_Init_Poly:718] N_initvariable_avoid_conflict = 10
[INFO Add_InitSuffix:613] i_initvariable_avoid_conflict
[INFO Add_InitSuffix:613] N_initvariable_avoid_conflict
[INFO Compute_and_Eliminate_Init_Poly:756] Before Transform init_dnf into polyhedron: 

[Print SelfDefined DNF Information]
DNF disjunctive branch 0 and its size is:5
	[DNF Number 0 is:]
	N = N_initvariable_avoid_conflict
	[DNF Number 1 is:]
	i = i_initvariable_avoid_conflict
	[DNF Number 2 is:]
	i_initvariable_avoid_conflict = 0
	[DNF Number 3 is:]
	N_initvariable_avoid_conflict = 10
	[DNF Number 4 is:]
	i_initvariable_avoid_conflict < N_initvariable_avoid_conflict
DNF disjunctive clause 0 is printed.
DNF disjunctive branch 1 and its size is:5
	[DNF Number 0 is:]
	N = N_initvariable_avoid_conflict
	[DNF Number 1 is:]
	i = i_initvariable_avoid_conflict
	[DNF Number 2 is:]
	i_initvariable_avoid_conflict = 0
	[DNF Number 3 is:]
	N_initvariable_avoid_conflict = 10
	[DNF Number 4 is:]
	i_initvariable_avoid_conflict > N_initvariable_avoid_conflict
DNF disjunctive clause 1 is printed.

[check_guard info] The Expr N = N_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] N
[INFO Trans_Expr_to_LinExpr:197] 2
[INFO Trans_Expr_to_LinExpr:198] N_initvariable_avoid_conflict
[check_guard info] The Expr i = i_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] i
[INFO Trans_Expr_to_LinExpr:197] 3
[INFO Trans_Expr_to_LinExpr:198] i_initvariable_avoid_conflict
[check_guard info] The Expr i_initvariable_avoid_conflict = 0 is not guard
[INFO Trans_Expr_to_Constraints:406] i_initvariable_avoid_conflict
[check_guard info] The Expr N_initvariable_avoid_conflict = 10 is not guard
[INFO Trans_Expr_to_Constraints:406] N_initvariable_avoid_conflict
[check_guard info] The Expr i_initvariable_avoid_conflict < N_initvariable_avoid_conflict is guard
[INFO Trans_Expr_to_LinExpr:197] 3
[INFO Trans_Expr_to_LinExpr:198] i_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 2
[INFO Trans_Expr_to_LinExpr:198] N_initvariable_avoid_conflict
[check_guard info] The Expr N = N_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] N
[INFO Trans_Expr_to_LinExpr:197] 2
[INFO Trans_Expr_to_LinExpr:198] N_initvariable_avoid_conflict
[check_guard info] The Expr i = i_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] i
[INFO Trans_Expr_to_LinExpr:197] 3
[INFO Trans_Expr_to_LinExpr:198] i_initvariable_avoid_conflict
[check_guard info] The Expr i_initvariable_avoid_conflict = 0 is not guard
[INFO Trans_Expr_to_Constraints:406] i_initvariable_avoid_conflict
[check_guard info] The Expr N_initvariable_avoid_conflict = 10 is not guard
[INFO Trans_Expr_to_Constraints:406] N_initvariable_avoid_conflict
[check_guard info] The Expr i_initvariable_avoid_conflict > N_initvariable_avoid_conflict is guard
[INFO Trans_Expr_to_LinExpr:197] 3
[INFO Trans_Expr_to_LinExpr:198] i_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 2
[INFO Trans_Expr_to_LinExpr:198] N_initvariable_avoid_conflict
[INFO eliminate_initsuffix:654] N
[INFO eliminate_initsuffix:654] N
[INFO eliminate_initsuffix:654] i
[INFO eliminate_initsuffix:654] i
[INFO eliminate_initsuffix:654] i
[INFO eliminate_initsuffix:654] N
[INFO eliminate_initsuffix:654] i
[INFO eliminate_initsuffix:654] N
[INFO eliminate_initsuffix:654] N
[INFO eliminate_initsuffix:654] N
[INFO eliminate_initsuffix:654] i
[INFO eliminate_initsuffix:654] i
[INFO eliminate_initsuffix:654] i
[INFO eliminate_initsuffix:654] N
[INFO eliminate_initsuffix:654] i
[INFO eliminate_initsuffix:654] N
[INFO Elimiate_Impossible_Path:1201] Before Eliminate impossible path

[Print DNF Information]
DNF disjunctive branch 0 and its size is:4
	[DNF Number 0 is:]
	i = i + 1
	[DNF Number 1 is:]
	N = N
	[DNF Number 2 is:]
	N_initvariable_avoid_conflict = N_initvariable_avoid_conflict
	[DNF Number 3 is:]
	i_initvariable_avoid_conflict = i_initvariable_avoid_conflict
DNF disjunctive clause 0 is printed.DNF disjunctive branch 1 and its size is:4
	[DNF Number 0 is:]
	i = i + 1
	[DNF Number 1 is:]
	N = N
	[DNF Number 2 is:]
	N_initvariable_avoid_conflict = N_initvariable_avoid_conflict
	[DNF Number 3 is:]
	i_initvariable_avoid_conflict = i_initvariable_avoid_conflict
DNF disjunctive clause 1 is printed.
[Print inequality_DNF Information]
inequality_DNF disjunctive branch 0 and its size is:1
	[inequality_DNF Number 0 is:]
	i < N
inequality_DNF disjunctive clause 0 is printed.inequality_DNF disjunctive branch 1 and its size is:1
	[inequality_DNF Number 0 is:]
	i > N
inequality_DNF disjunctive clause 1 is printed.
[check_guard info] The Expr i = i + 1 is not guard
[INFO Trans_Expr_to_Constraints:406] i
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[check_guard info] The Expr N = N is not guard
[INFO Trans_Expr_to_Constraints:406] N
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr N_initvariable_avoid_conflict = N_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] N_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 2
[INFO Trans_Expr_to_LinExpr:198] N_initvariable_avoid_conflict
[check_guard info] The Expr i_initvariable_avoid_conflict = i_initvar3
iable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] i_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 3
[INFO Trans_Expr_to_LinExpr:198] i_initvariable_avoid_conflict
[check_guard info] The Expr i = i + 1 is not guard
[INFO Trans_Expr_to_Constraints:406] i
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[check_guard info] The Expr N = N is not guard
[INFO Trans_Expr_to_Constraints:406] N
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr N_initvariable_avoid_conflict = N_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] N_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 2
[INFO Trans_Expr_to_LinExpr:198] N_initvariable_avoid_conflict
[check_guard info] The Expr i_initvariable_avoid_conflict = i_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] i_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 3
[INFO Trans_Expr_to_LinExpr:198] i_initvariable_avoid_conflict
[INFO Compute_Loop_Invariant:1343] 1
[check_guard info] The Expr i < N is guard
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr i < N is guard
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr i > N is guard
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr i > N is guard
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr i = i + 1 is not guard
[INFO Trans_Expr_to_Constraints:406] i
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[check_guard info] The Expr N = N is not guard
[INFO Trans_Expr_to_Constraints:406] N
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr N_initvariable_avoid_conflict = N_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] N_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 2
[INFO Trans_Expr_to_LinExpr:198] N_initvariable_avoid_conflict
[check_guard info] The Expr i_initvariable_avoid_conflict = i_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] i_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 3
[INFO Trans_Expr_to_LinExpr:198] i_initvariable_avoid_conflict
[check_guard info] The Expr i = i + 1 is not guard
[INFO Trans_Expr_to_Constraints:406] i
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[check_guard info] The Expr N = N is not guard
[INFO Trans_Expr_to_Constraints:406] N
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr N_initvariable_avoid_conflict = N_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] N_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 2
[INFO Trans_Expr_to_LinExpr:198] N_initvariable_avoid_conflict
[check_guard info] The Expr i_initvariable_avoid_conflict = i_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] i_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 3
[INFO Trans_Expr_to_LinExpr:198] i_initvariable_avoid_conflict
[check_guard info] The Expr i = i + 1 is not guard
[INFO Trans_Expr_to_Constraints:406] i
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[check_guard info] The Expr N = N is not guard
[INFO Trans_Expr_to_Constraints:406] N
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr N_initvariable_avoid_conflict = N_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] N_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 2
[INFO Trans_Expr_to_LinExpr:198] N_initvariable_avo
----------------------------- 
| The Locations read in are: 
----------------------------- 

Location: Location_0
# of variables: 4
「 l: 0, vars_num: 4, dual_num: 15 」
Initial Condition: [[ 
| 
├ 1 * i_initvariable_avoid_conflict  = 0 
├ 1 * N_initvariable_avoid_conflict -10 = 0 
├ 1 * i  = 0 
├ 1 * N -10 = 0 
| 
]]
Invariant: [[ 
| 
├  True
| 
]]

Location: Location_1
# of variables: 4
「 l: 5, vars_num: 4, dual_num: 15 」
[ no initial condition set]
Invariant: [[ 
| 
├  True
| 
]]

Location: le
# of variables: 4
「 l: 10, vars_num: 4, dual_num: 15 」
[ no initial condition set]
Invariant: [[ 
| 
├  True
| 
]]
----------------------------- 
| The Transitions read in are: 
----------------------------- 
Transition Relation: Transition_0_0
Pre-Location:Location_0   Post-Location:Location_0
Transition Relation: [[
| 
├ 1 * i_initvariable_avoid_conflict -1 * `i_initvariable_avoid_conflict  = 0 
├ 1 * N_initvariable_avoid_conflict -1 * `N_initvariable_avoid_conflict  = 0 
├ 1 * i -1 * `i  + 1 = 0 
├ 1 * N -1 * `N  = 0 
├ 1 * N -1 * i -2 >= 0
| 
]]
Guard: [[
| 
├ 1 * N -1 * i -2 >= 0
| 
]]
Update: [[
| 
├ 1 * i -1 * `i  + 1 = 0 
| 
]]
Preserved: [[
| 
├  N
├  N_initvariable_avoid_conflict
├  i_initvariable_avoid_conflict
| 
]]

- Transition Relation Transition_0_0 Ends
----------------------------- 
Transition Relation: Exit_Transition_from_0_index_0
Pre-Location:Location_0   Post-Location:le
Transition Relation: [[
| 
├ 1 * i_initvariable_avoid_conflict -1 * `i_initvariable_avoid_conflict  = 0 
├ 1 * N_initvariable_avoid_conflict -1 * `N_initvariable_avoid_conflict  = 0 
├ 1 * N -1 * `i  = 0 
├ 1 * N -1 * `N  = 0 
├ 1 * N -1 * i -1 = 0 
| 
]]
Guard: [[
| 
├ 1 * N -1 * i -1 = 0 
| 
]]
Update: [[
| 
├ 1 * N -1 * `i  = 0 
| 
]]
Preserved: [[
| 
├  N
├  N_initvariable_avoid_conflict
├  i_initvariable_avoid_conflict
| 
]]

- Transition Relation Exit_Transition_from_0_index_0 Ends
----------------------------- 
Transition Relation: Transition_1_1
Pre-Location:Location_1   Post-Location:Location_1
Transition Relation: [[
| 
├ 1 * i_initvariable_avoid_conflict -1 * `i_initvariable_avoid_conflict  = 0 
├ 1 * N_initvariable_avoid_conflict -1 * `N_initvariable_avoid_conflict  = 0 
├ 1 * i -1 * `i  + 1 = 0 
├ 1 * N -1 * `N  = 0 
├ -1 * N  + 1 * i -1 >= 0
| 
]]
Guard: [[
| 
├ -1 * N  + 1 * i -1 >= 0
| 
]]
Update: [[
| 
├ 1 * i -1 * `i  + 1 = 0 
| 
]]
Preserved: [[
| 
├  N
├  N_initvariable_avoid_conflict
├  i_initvariable_avoid_conflict
| 
]]

- Transition Relation Transition_1_1 Ends
----------------------------- 

- Initialize_before_Parser doing...
/----------------------------- 
| Adjacency Matrix for Location and Transition: 
----------------------------- 
| Input: 3 transitions
----------------------------- 
| [#] is transition_index
| Location_0: [ 0 ]->Location_0;  []->Location_1;  [ 1 ]->le;  
| Location_1: []->Location_0;  [ 2 ]->Location_1;  []->le;  
| le: []->Location_0;  []->Location_1;  []->le;  
----------------------------- 
| Output: 3 transitions
\----------------------------- 

> > > Location::compute_dual_constraints(), Location: Location_0's Initialization
- Initial-Value is not empty: 
  D = 0, C = 10, B = 0, A = 10
< < < Location::compute_dual_constraints(), Location: Location_0's Initialization

> > > Location::compute_dual_constraints(), Location: Location_1's Initialization
- Initial-Value is not empty: 
  true
< < < ( !polyset ) in Location::Location_1

> > > Location::compute_dual_constraints(), Location: le's Initialization
- Initial-Value is not empty: 
  true
< < < ( !polyset ) in Location::le

> > > (intra transition) In compute_consecution_constraints(), TransitionRelation : Transition_0_0
Current transition has poly as follows: 
  D - H = 0, C - G = 0, B - F = -1, A - E = 0, A - B >= 2
  Compute this transition: 1
  pushing back clump with 1 Polyhedra (in falsepath)...
< < < Intra-Transition::Transition_0_0 prepare to push back clump with 1 Polyhedra

> > > (inter transition) In compute_consecution_01(), TransitionRelation : Exit_Transition_from_0_index_0
Current transition has poly as follows: 
  D - H = 0, C - G = 0, A - B = 1, A - E = 0, A - F = 0
  Compute this transition: 0
< < < Inter-Transition::Exit_Transition_from_0_index_0 pushing back clump with 0 Polyhedra...done

> > > (intra transition) In compute_consecution_constraints(), TransitionRelation : Transition_1_1
Current transition has poly as follows: 
  D - H = 0, C - G = 0, B - F = -1, A - E = 0, -A + B >= 1
  Compute this transition: 1
  pushing back clump with 1 Polyhedra (in falsepath)...
< < < Intra-Transition::Transition_1_1 prepare to push back clump with 1 Polyhedra
> > > Location::Location_0 already has clump with 1 Polyhedra...
> > > Location::Location_0 altogether pushing back clump with 3 Polyhedra...done
> > > Location::Location_1 already has clump with 1 Polyhedra...
> > > Location::Location_1 altogether pushing back clump with 2 Polyhedra...done
> > > Location::le already has clump with 0 Polyhedra...
> > > Location::le altogether pushing back clump with 1 Polyhedra...done

/ Start to solve Location Location_0
/ Using target_prior2
/ Generate Sequences
> > > Tree::sequences generation()
> > > Tree::two_per_group()

From hb:2 To lb:2
> > > Tree::dfs_sub_sequences_traverse()
( Weaved Prune Tree, current length is 1
( 2  ⋁  [0] 1  2  --  b: 0 --  Location_Intra:: Location_0
( 1  ⋁   0        --  b: 0 --  Location_Intra:: le
( 0  ⋁   0  1     --  b: 0 --  Location_Intra:: Location_1
( Weaved Prune Tree, current length is 1
( 2  ⋁   0 [1] 2  --  b: 0 --  Location_Intra:: Location_0
( 1  ⋁   0        --  b: 0 --  Location_Intra:: le
( 0  ⋁   0  1     --  b: 0 --  Location_Intra:: Location_1
Above part, the 1th poly is erased by next poly in back-prune
( Weaved Prune Tree, current length is 1
( 2  ⋁   0  1 [2] --  b: 0 --  Location_Intra:: Location_0
( 1  ⋁   0        --  b: 0 --  Location_Intra:: le
( 0  ⋁   0  1     --  b: 0 --  Location_Intra:: Location_1
This sub_sequences invd_vp has weaved:2
< < < Tree::dfs_sub_sequences_traverse()
sub_sequences.size()/capacity():2/2
This PRE_LOC has banged:1

From hb:1 To lb:0
> > > Tree::dfs_sub_sequences_traverse()
( Weaved Prune Tree, current length is 2
( 2  ⋁   0  1  2  --  b: 0 --  Location_Intra:: Location_0
( 1  ⋁  [0]       --  b: 0 --  Location_Intra:: le
( 0  ⋁  [0] 1     --  b: 0 --  Location_Intra:: Location_1
( Weaved Prune Tree, current length is 2
( 2  ⋁   0  1  2  --  b: 0 --  Location_Intra:: Location_0
( 1  ⋁  [0]       --  b: 0 --  Location_Intra:: le
( 0  ⋁   0 [1]    --  b: 0 --  Location_Intra:: Location_1
This sub_sequences invd_vp has weaved:2
< < < Tree::dfs_sub_sequences_traverse()
sub_sequences.size()/capacity():2/2
This PRE_LOC has banged:1
< < < Tree::two_per_group()
< < < Tree::sequences generation()
- ( !init_poly_flag ) in Location::Location_1
- ( !init_poly_flag ) in Location::le

/ Start to solve Location Location_0
/ Using target_prior2
/ Read(Traverse) Sequences
> > > Tree::dfs_sequences_traverse()

sequence:100
/-----------------------------
( Weaved Prune Tree, current length is 3
( 2  ⋁   0 [1] 2  --  b: 0 --  Location:: Location_0
( 1  ⋁  [0]       --  b: 0 --  Location:: le
( 0  ⋁  [0] 1     --  b: 0 --  Location:: Location_1
For location: Location_0
「 l: 0, vars_num: 4, dual_num: 15 」
> > > Project_by_Kohler(), doing...
< < < Project_by_Kohler(), done!

- Have Collected 1 invariant(s)
- The collect_invariants Time Taken (0.01s) = 0
\-----------------------------
( Banged Prune Tree, current length is 2
( in unrelated transition
( 2  ⋁   0 [1] 2  --  b: 0 --  Location:: Location_0
( 1  ⋁  [0]       --  b: 1 --  Location:: le
( 0  ⋁   0  1     --  b: 0 --  Location:: Location_1

sequence:200
/-----------------------------
( Weaved Prune Tree, current length is 3
( 2  ⋁   0  1 [2] --  b: 0 --  Location:: Location_0
( 1  ⋁  [0]       --  b: 1 --  Location:: le
( 0  ⋁  [0] 1     --  b: 0 --  Location:: Location_1
For location: Location_0
「 l: 0, vars_num: 4, dual_num: 15 」
> > > Project_by_Kohler(), doing...
< < < Project_by_Kohler(), done!

- Have Collected 2 invariant(s)
- The collect_invariants Time Taken (0.01s) = 0
\-----------------------------
( Banged Prune Tree, current length is 2
( in unrelated transition
( 2  ⋁   0  1 [2] --  b: 0 --  Location:: Location_0
( 1  ⋁  [0]       --  b: 2 --  Location:: le
( 0  ⋁   0  1     --  b: 0 --  Location:: Location_1
< < < Tree::dfs_sequences_traverse()
- ( !init_poly_flag ) in Location::Location_1
- ( !init_poly_flag ) in Location::le

> > > compute_invariants_by_propagation_with_farkas()
- YES! Initial Location:: Location_0
- NO. No initial condition in Location::Location_1
' 1 location [ 0 ] remained in initial_lid

> > > invgen_need_working()
* all_ppg_flag: 0
' 1 location [ 0 ] remained in ppging_lid
< < < invgen_need_working()
/------------------------------(Propagation with Farkas)
' Propagation
' 1 location [ 0 ] remained in ppging_lid
' 0 transition [] remained in ppging_tid
' Farkas
' 0 location [] remained in ppged_lid
Warning: there are 0 location need to be computed invariants by Farkas
\------------------------------(Propagation with Farkas)

> > > invgen_need_working()
* all_ppg_flag: 0
' 0 location [] remained in ppging_lid
! invgen is over !
< < < invgen_need_working()
/------------------------------(Propagation to Exit-Location)
= Location le is being Propagated:
= From Location invariant Location_0
  D = 0, C = 10, A = 10, -B >= -9, B >= 0
= Through Transition relation Exit_Transition_from_0_index_0: 
  D - H = 0, C - G = 0, A - B = 1, A - E = 0, A - F = 0
= Propagated Location Invariant le
  true
* After intersection 
  H = 0, G = 10, F = 10, E = 10, D = 0, C = 10, B = 9, A = 10
* Propagated Invariant at le
  D = 0, A = 10, B = 10, C = 10
\------------------------------(Propagation to Exit-Location)
< < < compute_invariants_by_propagation_with_farkas()
----------------------------- 
| The Locations read in are: 
----------------------------- 

Location: Location_0
# of variables: 4
「 l: 0, vars_num: 4, dual_num: 15 」
Initial Condition: [[ 
| 
├ 1 * i_initvariable_avoid_conflict  = 0 
├ 1 * N_initvariable_avoid_conflict -10 = 0 
├ 1 * i  = 0 
├ 1 * N -10 = 0 
| 
]]
Invariant: [[ 
| 
├ 1 * i_initvariable_avoid_conflict  = 0 
├ 1 * N_initvariable_avoid_conflict -10 = 0 
├ 1 * N -10 = 0 
├ -1 * i  + 9 >= 0
├ 1 * i  >= 0
| 
]]

Location: Location_1
# of variables: 4
「 l: 5, vars_num: 4, dual_num: 15 」
[ no initial condition set]
Invariant: [[ 
| 
├  True
| 
]]

Location: le
# of variables: 4
「 l: 10, vars_num: 4, dual_num: 15 」
[ no initial condition set]
Disjunctive Invariant: [[ 
  
1 * i_initvariable_avoid_conflict  = 0 
1 * N -10 = 0 
1 * i -10 = 0 
1 * N_initvariable_avoid_conflict -10 = 0 
  
]]
id_conflict
[check_guard info] The Expr i_initvariable_avoid_conflict = i_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] i_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 3
[INFO Trans_Expr_to_LinExpr:198] i_initvariable_avoid_conflict
[check_guard info] The Expr i == N is guard
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr i = i + 1 is not guard
[INFO Trans_Expr_to_Constraints:406] i
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[check_guard info] The Expr N = N is not guard
[INFO Trans_Expr_to_Constraints:406] N
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr N_initvariable_avoid_conflict = N_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] N_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 2
[INFO Trans_Expr_to_LinExpr:198] N_initvariable_avoid_conflict
[check_guard info] The Expr i_initvariable_avoid_conflict = i_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] i_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 3
[INFO Trans_Expr_to_LinExpr:198] i_initvariable_avoid_conflict
[check_guard info] The Expr i = i + 1 is not guard
[INFO Trans_Expr_to_Constraints:406] i
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[check_guard info] The Expr N = N is not guard
[INFO Trans_Expr_to_Constraints:406] N
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr N_initvariable_avoid_conflict = N_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] N_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 2
[INFO Trans_Expr_to_LinExpr:198] N_initvariable_avoid_conflict
[check_guard info] The Expr i_initvariable_avoid_conflict = i_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] i_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 3
[INFO Trans_Expr_to_LinExpr:198] i_initvariable_avoid_conflict
[check_guard info] The Expr i = i + 1 is not guard
[INFO Trans_Expr_to_Constraints:406] i
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[check_guard info] The Expr N = N is not guard
[INFO Trans_Expr_to_Constraints:406] N
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr N_initvariable_avoid_conflict = N_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] N_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 2
[INFO Trans_Expr_to_LinExpr:198] N_initvariable_avoid_conflict
[check_guard info] The Expr i_initvariable_avoid_conflict = i_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] i_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 3
[INFO Trans_Expr_to_LinExpr:198] i_initvariable_avoid_conflict
[check_guard info] The Expr i == N is guard
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N

[Print SelfDefined DNF Information]
DNF disjunctive branch 0 and its size is:2
	[DNF Number 0 is:]
	1 * i - 10 == 0
	[DNF Number 1 is:]
	1 * N - 10 == 0
DNF disjunctive clause 0 is printed.

[Print SelfDefined DNF Information]
DNF disjunctive branch 0 and its size is:3
	[DNF Number 0 is:]
	1 * N - 10 == 0
	[DNF Number 1 is:]
	1 * i >= 0
	[DNF Number 2 is:]
	-1 * i + 9 >= 0
DNF disjunctive clause 0 is printed.
[check_guard info] The Expr i < N is guard
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr i < N is guard
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr i > N is guard
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr i > N is guard
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr i = i + 1 is not guard
[INFO Trans_Expr_to_Constraints:406] i
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[check_guard info] The Expr N = N is not guard
[INFO Trans_Expr_to_Constraints:406] N
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr N_initvariable_avoid_conflict = N_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] N_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 2
[INFO Trans_Expr_to_LinExpr:198] N_initvariable_avoid_conflict
[check_guard info] The Expr i_initvariable_avoid_conflict = i_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] i_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 3
[INFO Trans_Expr_to_LinExpr:198] i_initvariable_avoid_conflict
[check_guard info] The Expr i = i + 1 is not guard
[INFO Trans_Expr_to_Constraints:406] i
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[check_guard info] The Expr N = N is not guard
[INFO Trans_Expr_to_Constraints:406] N
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr N_initvariable_avoid_conflict = N_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] N_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 2
[INFO Trans_Expr_to_LinExpr:198] N_initvariable_avoid_conflict
[check_guard info] The Expr i_initvariable_avoid_conflict = i_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] i_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 3
[INFO Trans_Expr_to_LinExpr:198] i_initvariable_avoid_conflict
[check_guard info] The Expr i = i + 1 is not guard
[INFO Trans_Expr_to_Constraints:406] i
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[check_guard info] The Expr N = N is not guard
[INFO Trans_Expr_to_Constraints:406] N
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr N_initvariable_avoid_conflict = N_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] N_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 2
[INFO Trans_Expr_to_LinExpr:198] N_initvariable_avoid_conflict
[check_guard info] The Expr i_initvariable_avoid_conflict = i_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] i_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 3
[INFO Trans_Expr_to_LinExpr:198] i_initvariable_avoid_conflict
[check_guard info] The Expr i == N is guard
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr i = i + 1 is not guard
[INFO Trans_Expr_to_Constraints:406] i
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[check_guard info] The Expr N = N is not guard
[INFO Trans_Expr_to_Constraints:406] N
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr N_initvariable_avoid_conflict = N_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] N_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 2
[INFO Trans_Expr_to_LinExpr:198] N_initvariable_avoid_conflict
[check_guard info] The Expr i_initvariable_avoid_conflict = i_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] i_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 3
[INFO Trans_Expr_to_LinExpr:198] i_initvariable_avoid_conflict
[check_guard info] The Expr i = i + 1 is not guard
[INFO Trans_Expr_to_Constraints:406] i
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[check_guard info] The Expr N = N is not guard
[INFO Trans_Expr_to_Constraints:406] N
[INF
----------------------------- 
| The Locations read in are: 
----------------------------- 

Location: Location_0
# of variables: 4
「 l: 15, vars_num: 4, dual_num: 30 」
[ no initial condition set]
Invariant: [[ 
| 
├  True
| 
]]

Location: Location_1
# of variables: 4
「 l: 20, vars_num: 4, dual_num: 30 」
Initial Condition: [[ 
| 
├ 1 * i_initvariable_avoid_conflict  = 0 
├ 1 * N_initvariable_avoid_conflict -10 = 0 
├ 1 * i  = 0 
├ 1 * N -10 = 0 
| 
]]
Invariant: [[ 
| 
├  True
| 
]]

Location: le
# of variables: 4
「 l: 25, vars_num: 4, dual_num: 30 」
[ no initial condition set]
Invariant: [[ 
| 
├  True
| 
]]
----------------------------- 
| The Transitions read in are: 
----------------------------- 
Transition Relation: Transition_0_0
Pre-Location:Location_0   Post-Location:Location_0
Transition Relation: [[
| 
├ 1 * i_initvariable_avoid_conflict -1 * `i_initvariable_avoid_conflict  = 0 
├ 1 * N_initvariable_avoid_conflict -1 * `N_initvariable_avoid_conflict  = 0 
├ 1 * i -1 * `i  + 1 = 0 
├ 1 * N -1 * `N  = 0 
├ 1 * N -1 * i -2 >= 0
| 
]]
Guard: [[
| 
├ 1 * N -1 * i -2 >= 0
| 
]]
Update: [[
| 
├ 1 * i -1 * `i  + 1 = 0 
| 
]]
Preserved: [[
| 
├  N
├  N_initvariable_avoid_conflict
├  i_initvariable_avoid_conflict
| 
]]

- Transition Relation Transition_0_0 Ends
----------------------------- 
Transition Relation: Exit_Transition_from_0_index_0
Pre-Location:Location_0   Post-Location:le
Transition Relation: [[
| 
├ 1 * i_initvariable_avoid_conflict -1 * `i_initvariable_avoid_conflict  = 0 
├ 1 * N_initvariable_avoid_conflict -1 * `N_initvariable_avoid_conflict  = 0 
├ 1 * N -1 * `i  = 0 
├ 1 * N -1 * `N  = 0 
├ 1 * N -1 * i -1 = 0 
| 
]]
Guard: [[
| 
├ 1 * N -1 * i -1 = 0 
| 
]]
Update: [[
| 
├ 1 * N -1 * `i  = 0 
| 
]]
Preserved: [[
| 
├  N
├  N_initvariable_avoid_conflict
├  i_initvariable_avoid_conflict
| 
]]

- Transition Relation Exit_Transition_from_0_index_0 Ends
----------------------------- 
Transition Relation: Transition_1_1
Pre-Location:Location_1   Post-Location:Location_1
Transition Relation: [[
| 
├ 1 * i_initvariable_avoid_conflict -1 * `i_initvariable_avoid_conflict  = 0 
├ 1 * N_initvariable_avoid_conflict -1 * `N_initvariable_avoid_conflict  = 0 
├ 1 * i -1 * `i  + 1 = 0 
├ 1 * N -1 * `N  = 0 
├ -1 * N  + 1 * i -1 >= 0
| 
]]
Guard: [[
| 
├ -1 * N  + 1 * i -1 >= 0
| 
]]
Update: [[
| 
├ 1 * i -1 * `i  + 1 = 0 
| 
]]
Preserved: [[
| 
├  N
├  N_initvariable_avoid_conflict
├  i_initvariable_avoid_conflict
| 
]]

- Transition Relation Transition_1_1 Ends
----------------------------- 

- Initialize_before_Parser doing...
/----------------------------- 
| Adjacency Matrix for Location and Transition: 
----------------------------- 
| Input: 3 transitions
----------------------------- 
| [#] is transition_index
| Location_0: [ 0 ]->Location_0;  []->Location_1;  [ 1 ]->le;  
| Location_1: []->Location_0;  [ 2 ]->Location_1;  []->le;  
| le: []->Location_0;  []->Location_1;  []->le;  
----------------------------- 
| Output: 3 transitions
\----------------------------- 

> > > Location::compute_dual_constraints(), Location: Location_0's Initialization
- Initial-Value is not empty: 
  true
< < < ( !polyset ) in Location::Location_0

> > > Location::compute_dual_constraints(), Location: Location_1's Initialization
- Initial-Value is not empty: 
  D = 0, C = 10, B = 0, A = 10
< < < Location::compute_dual_constraints(), Location: Location_1's Initialization

> > > Location::compute_dual_constraints(), Location: le's Initialization
- Initial-Value is not empty: 
  true
< < < ( !polyset ) in Location::le

> > > (intra transition) In compute_consecution_constraints(), TransitionRelation : Transition_0_0
Current transition has poly as follows: 
  D - H = 0, C - G = 0, B - F = -1, A - E = 0, A - B >= 2
  Compute this transition: 1
  pushing back clump with 1 Polyhedra (in falsepath)...
< < < Intra-Transition::Transition_0_0 prepare to push back clump with 1 Polyhedra

> > > (inter transition) In compute_consecution_01(), TransitionRelation : Exit_Transition_from_0_index_0
Current transition has poly as follows: 
  D - H = 0, C - G = 0, A - B = 1, A - E = 0, A - F = 0
  Compute this transition: 0
< < < Inter-Transition::Exit_Transition_from_0_index_0 pushing back clump with 0 Polyhedra...done

> > > (intra transition) In compute_consecution_constraints(), TransitionRelation : Transition_1_1
Current transition has poly as follows: 
  D - H = 0, C - G = 0, B - F = -1, A - E = 0, -A + B >= 1
  Compute this transition: 1
  pushing back clump with 1 Polyhedra (in falsepath)...
< < < Intra-Transition::Transition_1_1 prepare to push back clump with 1 Polyhedra
> > > Location::Location_0 already has clump with 1 Polyhedra...
Back Prune: new contains one of this
> > > Location::Location_0 altogether pushing back clump with 2 Polyhedra...done
> > > Location::Location_1 already has clump with 1 Polyhedra...
> > > Location::Location_1 altogether pushing back clump with 2 Polyhedra...done
> > > Location::le already has clump with 0 Polyhedra...
> > > Location::le altogether pushing back clump with 1 Polyhedra...done
- ( !init_poly_flag ) in Location::Location_0

/ Start to solve Location Location_1
/ Using target_prior2
/ Generate Sequences
> > > Tree::sequences generation()
> > > Tree::two_per_group()

From hb:2 To lb:2
> > > Tree::dfs_sub_sequences_traverse()
( Weaved Prune Tree, current length is 1
( 2  ⋁  [0] 1  --  b: 0 --  Location_Intra:: Location_1
( 1  ⋁   0     --  b: 0 --  Location_Intra:: le
( 0  ⋁   0  1  --  b: 0 --  Location_Intra:: Location_0
( Weaved Prune Tree, current length is 1
( 2  ⋁   0 [1] --  b: 0 --  Location_Intra:: Location_1
( 1  ⋁   0     --  b: 0 --  Location_Intra:: le
( 0  ⋁   0  1  --  b: 0 --  Location_Intra:: Location_0
This sub_sequences invd_vp has weaved:2
< < < Tree::dfs_sub_sequences_traverse()
sub_sequences.size()/capacity():2/2
This PRE_LOC has banged:0

From hb:1 To lb:0
> > > Tree::dfs_sub_sequences_traverse()
( Weaved Prune Tree, current length is 2
( 2  ⋁   0  1  --  b: 0 --  Location_Intra:: Location_1
( 1  ⋁  [0]    --  b: 0 --  Location_Intra:: le
( 0  ⋁  [0] 1  --  b: 0 --  Location_Intra:: Location_0
( Weaved Prune Tree, current length is 2
( 2  ⋁   0  1  --  b: 0 --  Location_Intra:: Location_1
( 1  ⋁  [0]    --  b: 0 --  Location_Intra:: le
( 0  ⋁   0 [1] --  b: 0 --  Location_Intra:: Location_0
This sub_sequences invd_vp has weaved:2
< < < Tree::dfs_sub_sequences_traverse()
sub_sequences.size()/capacity():2/2
This PRE_LOC has banged:0
< < < Tree::two_per_group()
< < < Tree::sequences generation()
- ( !init_poly_flag ) in Location::le
- ( !init_poly_flag ) in Location::Location_0

/ Start to solve Location Location_1
/ Using target_prior2
/ Read(Traverse) Sequences
> > > Tree::dfs_sequences_traverse()

sequence:000
/-----------------------------
( Weaved Prune Tree, current length is 3
( 2  ⋁  [0] 1  --  b: 0 --  Location:: Location_1
( 1  ⋁  [0]    --  b: 0 --  Location:: le
( 0  ⋁  [0] 1  --  b: 0 --  Location:: Location_0
For location: Location_1
「 l: 20, vars_num: 4, dual_num: 30 」
> > > Project_by_Kohler(), doing...
< < < Project_by_Kohler(), done!

- Have Collected 1 invariant(s)
- The collect_invariants Time Taken (0.01s) = 0
\-----------------------------
( Banged Prune Tree, current length is 2
( in unrelated transition
( 2  ⋁  [0] 1  --  b: 0 --  Location:: Location_1
( 1  ⋁  [0]    --  b: 1 --  Location:: le
( 0  ⋁   0  1  --  b: 0 --  Location:: Location_0

sequence:100
/-----------------------------
( Weaved Prune Tree, current length is 3
( 2  ⋁   0 [1] --  b: 0 --  Location:: Location_1
( 1  ⋁  [0]    --  b: 1 --  Location:: le
( 0  ⋁  [0] 1  --  b: 0 --  Location:: Location_0
For location: Location_1
「 l: 20, vars_num: 4, dual_num: 30 」
> > > Project_by_Kohler(), doing...
< < < Project_by_Kohler(), done!

- Have Collected 2 invariant(s)
- The collect_invariants Time Taken (0.01s) = 0
\-----------------------------
( Banged Prune Tree, current length is 2
( in unrelated transition
( 2  ⋁   0 [1] --  b: 0 --  Location:: Location_1
( 1  ⋁  [0]    --  b: 2 --  Location:: le
( 0  ⋁   0  1  --  b: 0 --  Location:: Location_0
< < < Tree::dfs_sequences_traverse()
- ( !init_poly_flag ) in Location::le

> > > compute_invariants_by_propagation_with_farkas()
- NO. No initial condition in Location::Location_0
- YES! Initial Location:: Location_1
' 1 location [ 1 ] remained in initial_lid

> > > invgen_need_working()
* all_ppg_flag: 0
' 1 location [ 1 ] remained in ppging_lid
< < < invgen_need_working()
/------------------------------(Propagation with Farkas)
' Propagation
' 1 location [ 1 ] remained in ppging_lid
' 0 transition [] remained in ppging_tid
' Farkas
' 0 location [] remained in ppged_lid
Warning: there are 0 location need to be computed invariants by Farkas
\------------------------------(Propagation with Farkas)

> > > invgen_need_working()
* all_ppg_flag: 0
' 0 location [] remained in ppging_lid
! invgen is over !
< < < invgen_need_working()
id: 0, Location Location_0, ppg_flag is false, erase one of the exitic_tid
< < < compute_invariants_by_propagation_with_farkas()
----------------------------- 
| The Locations read in are: 
----------------------------- 

Location: Location_0
# of variables: 4
「 l: 15, vars_num: 4, dual_num: 30 」
[ no initial condition set]
Invariant: [[ 
| 
├  True
| 
]]

Location: Location_1
# of variables: 4
「 l: 20, vars_num: 4, dual_num: 30 」
Initial Condition: [[ 
| 
├ 1 * i_initvariable_avoid_conflict  = 0 
├ 1 * N_initvariable_avoid_conflict -10 = 0 
├ 1 * i  = 0 
├ 1 * N -10 = 0 
| 
]]
Invariant: [[ 
| 
├ 1 * i_initvariable_avoid_conflict  = 0 
├ 1 * N_initvariable_avoid_conflict -10 = 0 
├ 1 * i  = 0 
├ 1 * N -10 = 0 
| 
]]

Location: le
# of variables: 4
「 l: 25, vars_num: 4, dual_num: 30 」
[ no initial condition set]
Invariant: [[ 
| 
├  True
| 
]]
O Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr N_initvariable_avoid_conflict = N_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] N_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 2
[INFO Trans_Expr_to_LinExpr:198] N_initvariable_avoid_conflict
[check_guard info] The Expr i_initvariable_avoid_conflict = i_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] i_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 3
[INFO Trans_Expr_to_LinExpr:198] i_initvariable_avoid_conflict
[check_guard info] The Expr i = i + 1 is not guard
[INFO Trans_Expr_to_Constraints:406] i
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[check_guard info] The Expr N = N is not guard
[INFO Trans_Expr_to_Constraints:406] N
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr N_initvariable_avoid_conflict = N_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] N_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 2
[INFO Trans_Expr_to_LinExpr:198] N_initvariable_avoid_conflict
[check_guard info] The Expr i_initvariable_avoid_conflict = i_initvariable_avoid_conflict is not guard
[INFO Trans_Expr_to_Constraints:406] i_initvariable_avoid_conflict
[INFO Trans_Expr_to_LinExpr:197] 3
[INFO Trans_Expr_to_LinExpr:198] i_initvariable_avoid_conflict
[check_guard info] The Expr i == N is guard
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N

[Print SelfDefined DNF Information]


[Print SelfDefined DNF Information]
DNF disjunctive branch 0 and its size is:2
	[DNF Number 0 is:]
	1 * i == 0
	[DNF Number 1 is:]
	1 * N - 10 == 0
DNF disjunctive clause 0 is printed.
[INFO eliminate_initsuffix:654] i
[INFO eliminate_initsuffix:654] N
[INFO eliminate_initsuffix:654] i
[INFO eliminate_initsuffix:654] N

[Print SelfDefined DNF Information]
DNF disjunctive branch 0 and its size is:2
	[DNF Number 0 is:]
	1 * i - 10 == 0
	[DNF Number 1 is:]
	1 * N - 10 == 0
DNF disjunctive clause 0 is printed.
DNF disjunctive branch 1 and its size is:3
	[DNF Number 0 is:]
	1 * N - 10 == 0
	[DNF Number 1 is:]
	1 * i >= 0
	[DNF Number 2 is:]
	-1 * i + 9 >= 0
DNF disjunctive clause 1 is printed.
DNF disjunctive branch 2 and its size is:2
	[DNF Number 0 is:]
	1 * i == 0
	[DNF Number 1 is:]
	1 * N - 10 == 0
DNF disjunctive clause 2 is printed.
DNF disjunctive branch 3 and its size is:3
	[DNF Number 0 is:]
	i == N
	[DNF Number 1 is:]
	i == 0
	[DNF Number 2 is:]
	N == 10
DNF disjunctive clause 3 is printed.

[check_guard info] The Expr 1 * i - 10 == 0 is guard
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[check_guard info] The Expr 1 * N - 10 == 0 is guard
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr 1 * N - 10 == 0 is guard
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr 1 * i >= 0 is guard
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[check_guard info] The Expr -1 * i + 9 >= 0 is guard
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[check_guard info] The Expr 1 * i == 0 is guard
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[check_guard info] The Expr 1 * N - 10 == 0 is guard
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr i == N is guard
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[check_guard info] The Expr i == 0 is guard
[INFO Trans_Expr_to_LinExpr:197] 1
[INFO Trans_Expr_to_LinExpr:198] i
[check_guard info] The Expr N == 10 is guard
[INFO Trans_Expr_to_LinExpr:197] 0
[INFO Trans_Expr_to_LinExpr:198] N
[print statement info]
ReturnStmt
