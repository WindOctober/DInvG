Function:main
the entry block of the function is: Basic Block 15
the exit block of the function is: Basic Block 0
	BasicBlock:15
			succ Basic Block is :14
	BasicBlock:14
			Statement type:CallExpr
			Statement:malloc(sizeof(uint32_t) * 10)
			Statement type:DeclStmt
			Statement:uint32_t *map = malloc(sizeof(uint32_t) * 10);

			Statement type:CallExpr
			Statement:malloc(sizeof(uint32_t) * 10)
			Statement type:DeclStmt
			Statement:uint32_t *key = malloc(sizeof(uint32_t) * 10);

			Statement type:CallExpr
			Statement:memset(map, 0, sizeof(uint32_t) * 10)
			Statement type:CallExpr
			Statement:memset(key, 0, sizeof(uint32_t) * 10)
			Statement type:BinaryOperator
			Statement:key[0] = 1
			Statement type:BinaryOperator
			Statement:map[0] = 2
			Statement type:DeclStmt
			Statement:int ret;

			Statement type:DeclStmt
			Statement:int i = 1;

			succ Basic Block is :13
	BasicBlock:13
			Statement type:BinaryOperator
			Statement:i < 10
			Conditional jump with condition: ForStmt
			succ Loop body Block is :12
			succ Exit Loop Block is :10
	BasicBlock:10
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((ret == 0) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:ret == 0
			Conditional jump with condition: IfStmt
			succ Then Block is :9
			succ Else Block is :8
	BasicBlock:8
			Statement type:CallExpr
			Statement:__assert_fail("ret == 0", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/array/foo_loop_contract.c", 51, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:0
	BasicBlock:9
			succ Basic Block is :7
	BasicBlock:7
			Statement type:StmtExpr
			Statement:({
    if (ret == 0)
        ;
    else
        __assert_fail("ret == 0", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/array/foo_loop_contract.c", 51, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((ret == 0) ? 1 : 0) , __extension__ ({
    if (ret == 0)
        ;
    else
        __assert_fail("ret == 0", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/array/foo_loop_contract.c", 51, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((ret == -1) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:ret == -1
			Conditional jump with condition: IfStmt
			succ Then Block is :6
			succ Else Block is :5
	BasicBlock:5
			Statement type:CallExpr
			Statement:__assert_fail("ret == -1", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/array/foo_loop_contract.c", 52, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:6
			succ Basic Block is :4
	BasicBlock:4
			Statement type:StmtExpr
			Statement:({
    if (ret == -1)
        ;
    else
        __assert_fail("ret == -1", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/array/foo_loop_contract.c", 52, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((ret == -1) ? 1 : 0) , __extension__ ({
    if (ret == -1)
        ;
    else
        __assert_fail("ret == -1", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/array/foo_loop_contract.c", 52, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((0) ? 1 : 0)
			Statement type:IntegerLiteral
			Statement:0
			Conditional jump with condition: IfStmt
	unspecified mode for if statement. As there exists no then branch of if statement.
