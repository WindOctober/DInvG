CalleeFunction:swap
the entry block of the function is: Basic Block 2
the exit block of the function is: Basic Block 0
	BasicBlock:2
			succ Basic Block is :1
	BasicBlock:1
			Statement type:CompoundAssignOperator
			Statement:*a ^= *b
			Statement type:CompoundAssignOperator
			Statement:*b ^= *a
			Statement type:CompoundAssignOperator
			Statement:*a ^= *b
			succ Basic Block is :0
	BasicBlock:0
CalleeFunction:partition
the entry block of the function is: Basic Block 14
the exit block of the function is: Basic Block 0
	BasicBlock:14
			succ Basic Block is :13
	BasicBlock:13
			Statement type:DeclStmt
			Statement:int h = len - 1;

			Statement type:DeclStmt
			Statement:int l = 0;

			Statement type:DeclStmt
			Statement:int pivot_idx = len / 2;

			Statement type:DeclStmt
			Statement:int pivot = arr[pivot_idx];

			succ Basic Block is :12
	BasicBlock:12
			Statement type:BinaryOperator
			Statement:h > l
			Conditional jump with condition: WhileStmt
			succ Loop body Block is :11
			succ Exit Loop Block is :1
	BasicBlock:1
			Statement type:ImplicitCastExpr
			Statement:pivot_idx
			Statement type:ReturnStmt
			Statement:return pivot_idx;

			succ Basic Block is :0
	BasicBlock:0
	BasicBlock:11
			Statement type:BinaryOperator
			Statement:arr[h] <= pivot
			Conditional jump with condition: BinaryOperator
	BasicBlock:5
			Statement type:BinaryOperator
			Statement:arr[h] <= pivot
			Conditional jump with condition: IfStmt
			succ Then Block is :4
			succ Else Block is :3
	BasicBlock:3
			Statement type:UnaryOperator
			Statement:h--
			succ Basic Block is :2
	BasicBlock:2
			succ Basic Block is :12
	BasicBlock:4
			Statement type:UnaryOperator
			Statement:l++
			succ Basic Block is :2
	BasicBlock:10
			Statement type:BinaryOperator
			Statement:arr[l] >= pivot
			Conditional jump with condition: IfStmt
			succ Then Block is :9
			succ Else Block is :5
	BasicBlock:9
			Statement type:CallExpr
			Statement:swap(arr + h, arr + l)
			Statement type:BinaryOperator
			Statement:pivot_idx == h
			Conditional jump with condition: IfStmt
			succ Then Block is :8
			succ Else Block is :7
	BasicBlock:7
			Statement type:BinaryOperator
			Statement:pivot_idx == l
			Conditional jump with condition: IfStmt
			succ Then Block is :6
			succ Else Block is :2
	BasicBlock:6
			Statement type:BinaryOperator
			Statement:pivot_idx = h
			Statement type:UnaryOperator
			Statement:l++
			succ Basic Block is :2
	BasicBlock:8
			Statement type:BinaryOperator
			Statement:pivot_idx = l
			Statement type:UnaryOperator
			Statement:h--
			succ Basic Block is :7
CalleeFunction:quicksort
the entry block of the function is: Basic Block 4
the exit block of the function is: Basic Block 0
	BasicBlock:4
			succ Basic Block is :3
	BasicBlock:3
			Statement type:BinaryOperator
			Statement:len <= 1
			Conditional jump with condition: IfStmt
			succ Then Block is :2
			succ Else Block is :1
	BasicBlock:1
			Statement type:CallExpr
			Statement:malloc(len * sizeof(int))
			Statement type:DeclStmt
			Statement:int *new_ghost = malloc(len * sizeof(int));

			Statement type:CallExpr
			Statement:memcpy(new_ghost, arr, len * sizeof(int))
			Statement type:CallExpr
			Statement:partition(new_ghost, arr, len)
			Statement type:DeclStmt
			Statement:int pivot_idx = partition(new_ghost, arr, len);

			Statement type:CallExpr
			Statement:memcpy(new_ghost, arr, len * sizeof(int))
			Statement type:CallExpr
			Statement:quicksort(new_ghost, arr, pivot_idx)
			Statement type:CallExpr
			Statement:quicksort(new_ghost, arr + pivot_idx + 1, len - pivot_idx - 1)
			Statement type:CallExpr
			Statement:free(new_ghost)
			succ Basic Block is :0
	BasicBlock:0
	BasicBlock:2
			Statement type:ReturnStmt
			Statement:return;

			succ Basic Block is :0
Function:main
the entry block of the function is: Basic Block 2
the exit block of the function is: Basic Block 0
	BasicBlock:2
			succ Basic Block is :1
	BasicBlock:1
			Statement type:DeclStmt
			Statement:int arr[5] = {1, 2, 3, 0, 4};

			Statement type:DeclStmt
			Statement:int arr_ghost[5] = {1, 2, 3, 0, 4};

			Statement type:CallExpr
			Statement:quicksort(arr_ghost, arr, 5)
			succ Basic Block is :0
	BasicBlock:0
