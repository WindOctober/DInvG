Function:GetTlvLen
the entry block of the function is: Basic Block 9
the exit block of the function is: Basic Block 0
	BasicBlock:9
			succ Basic Block is :8
	BasicBlock:8
			Statement type:DeclStmt
			Statement:int i;

			Statement type:DeclStmt
			Statement:int totalLen;

			succ Basic Block is :7
	BasicBlock:7
			Statement type:BinaryOperator
			Statement:<recovery-expr>() < <recovery-expr>()
			Conditional jump with condition: ForStmt
			succ Loop body Block is :6
			succ Exit Loop Block is :1
	BasicBlock:1
			Statement type:RecoveryExpr
			Statement:<recovery-expr>()
			Statement type:ReturnStmt
			Statement:return <recovery-expr>();

			succ Basic Block is :0
	BasicBlock:0
	BasicBlock:6
			Statement type:BinaryOperator
			Statement:<recovery-expr>(array)[<recovery-expr>()] == <recovery-expr>()
			Conditional jump with condition: ConditionalOperator
	BasicBlock:5
			Statement type:BinaryOperator
			Statement:<recovery-expr>() + <recovery-expr>()[<recovery-expr>()]->len
			succ Basic Block is :3
	BasicBlock:3
			Statement type:ConditionalOperator
			Statement:(<recovery-expr>(array)[<recovery-expr>()] == <recovery-expr>()) ? <recovery-expr>() : <recovery-expr>() + <recovery-expr>()[<recovery-expr>()]->len
			Statement type:CompoundAssignOperator
			Statement:<recovery-expr>(totalLen) += (<recovery-expr>(array)[<recovery-expr>()] == <recovery-expr>()) ? <recovery-expr>() : <recovery-expr>() + <recovery-expr>()[<recovery-expr>()]->len
			succ Basic Block is :2
	BasicBlock:2
			Statement type:UnaryOperator
			Statement:++<recovery-expr>()
			succ Basic Block is :7
	BasicBlock:4
			Statement type:RecoveryExpr
			Statement:<recovery-expr>()
			succ Basic Block is :3
