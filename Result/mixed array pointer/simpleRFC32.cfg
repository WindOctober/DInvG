[info] Using default compilation options.
CalleeFunction:isMatch
the entry block of the function is: Basic Block 7
the exit block of the function is: Basic Block 0
	BasicBlock:7
			succ Basic Block is :6
	BasicBlock:6
			Statement type:DeclStmt
			Statement:int ret = 1;

			Statement type:DeclStmt
			Statement:unsigned int j = 0;

			succ Basic Block is :5
	BasicBlock:5
			Statement type:BinaryOperator
			Statement:j < 1
			Conditional jump with condition: ForStmt
			succ Loop body Block is :4
			succ Exit Loop Block is :1
	BasicBlock:1
			Statement type:ImplicitCastExpr
			Statement:ret
			Statement type:ReturnStmt
			Statement:return ret;

			succ Basic Block is :0
	BasicBlock:0
	BasicBlock:4
			Statement type:BinaryOperator
			Statement:pTmpbits[j] != bits[j]
			Conditional jump with condition: IfStmt
			succ Then Block is :3
			succ Else Block is :2
	BasicBlock:2
			Statement type:UnaryOperator
			Statement:++j
			succ Basic Block is :5
	BasicBlock:3
			Statement type:BinaryOperator
			Statement:ret = 0
			Conditional jump with condition: BreakStmt
Function:main
the entry block of the function is: Basic Block 98
the exit block of the function is: Basic Block 0
	BasicBlock:98
			succ Basic Block is :97
	BasicBlock:97
			Statement type:CallExpr
			Statement:malloc(sizeof(U32) * (255 + 1))
			Statement type:DeclStmt
			Statement:U32 *table = malloc(sizeof(U32) * (255 + 1));

			Statement type:CallExpr
			Statement:malloc(sizeof(BitMap) * (255 + 1))
			Statement type:DeclStmt
			Statement:BitMap *bitMap = malloc(sizeof(BitMap) * (255 + 1));

			Statement type:CallExpr
			Statement:memset(bitMap, 0, sizeof(BitMap) * (255 + 1))
			Statement type:DeclStmt
			Statement:int used = 0;

			Statement type:DeclStmt
			Statement:Rule rules[32];

			Statement type:DeclStmt
			Statement:unsigned int i = 0;

			succ Basic Block is :96
	BasicBlock:96
			Statement type:BinaryOperator
			Statement:i < (32 * 1)
			Conditional jump with condition: ForStmt
			succ Loop body Block is :95
			succ Exit Loop Block is :93
	BasicBlock:93
			Statement type:CallExpr
			Statement:malloc(sizeof(int) * (255 + 1) * (32 * 1))
			Statement type:DeclStmt
			Statement:int *ppStart = malloc(sizeof(int) * (255 + 1) * (32 * 1));

			Statement type:CallExpr
			Statement:malloc(sizeof(int) * (255 + 1) * (32 * 1))
			Statement type:DeclStmt
			Statement:int *ppEnd = malloc(sizeof(int) * (255 + 1) * (32 * 1));

			Statement type:CallExpr
			Statement:memset(ppStart, -1, sizeof(int) * (255 + 1) * (32 * 1))
			Statement type:CallExpr
			Statement:memset(ppEnd, -1, sizeof(int) * (255 + 1) * (32 * 1))
			Statement type:DeclStmt
			Statement:int startIndex[256];

			Statement type:DeclStmt
			Statement:int endIndex[256];

			Statement type:CallExpr
			Statement:memset(startIndex, 0, sizeof (startIndex))
			Statement type:CallExpr
			Statement:memset(endIndex, 0, sizeof (endIndex))
			Statement type:DeclStmt
			Statement:unsigned int i = 0;

			succ Basic Block is :92
	BasicBlock:92
			Statement type:BinaryOperator
			Statement:i < (32 * 1)
			Conditional jump with condition: ForStmt
			succ Loop body Block is :91
			succ Exit Loop Block is :89
	BasicBlock:89
			Statement type:DeclStmt
			Statement:U32 bits[1];

			Statement type:CallExpr
			Statement:memset(&bits, 0, sizeof (bits))
			Statement type:DeclStmt
			Statement:U32 changed = 0;

			Statement type:DeclStmt
			Statement:int id = -1;

			Statement type:DeclStmt
			Statement:int i = 1;

			succ Basic Block is :88
	BasicBlock:88
			Statement type:BinaryOperator
			Statement:i < (255 + 1)
			Conditional jump with condition: ForStmt
			succ Loop body Block is :87
			succ Exit Loop Block is :73
	BasicBlock:73
			Statement type:DeclStmt
			Statement:U32 result = *(table + 50);

			Statement type:CallExpr
			Statement:printf("0x%X", bitMap[result].bits[0])
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[result].bits[0] == 4294967295U) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[result].bits[0] == 4294967295U
			Conditional jump with condition: IfStmt
			succ Then Block is :72
			succ Else Block is :71
	BasicBlock:71
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[result].bits[0] == 0xFFFFFFFF", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 192, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:0
	BasicBlock:72
			succ Basic Block is :70
	BasicBlock:70
			Statement type:StmtExpr
			Statement:({
    if (bitMap[result].bits[0] == 4294967295U)
        ;
    else
        __assert_fail("bitMap[result].bits[0] == 0xFFFFFFFF", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 192, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[result].bits[0] == 4294967295U) ? 1 : 0) , __extension__ ({
    if (bitMap[result].bits[0] == 4294967295U)
        ;
    else
        __assert_fail("bitMap[result].bits[0] == 0xFFFFFFFF", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 192, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[0].bits[0] == 1) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[0].bits[0] == 1
			Conditional jump with condition: IfStmt
			succ Then Block is :69
			succ Else Block is :68
	BasicBlock:68
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[0].bits[0] == 1", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 194, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:69
			succ Basic Block is :67
	BasicBlock:67
			Statement type:StmtExpr
			Statement:({
    if (bitMap[0].bits[0] == 1)
        ;
    else
        __assert_fail("bitMap[0].bits[0] == 1", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 194, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[0].bits[0] == 1) ? 1 : 0) , __extension__ ({
    if (bitMap[0].bits[0] == 1)
        ;
    else
        __assert_fail("bitMap[0].bits[0] == 1", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 194, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[1].bits[0] == 3) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[1].bits[0] == 3
			Conditional jump with condition: IfStmt
			succ Then Block is :66
			succ Else Block is :65
	BasicBlock:65
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[1].bits[0] == 3", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 195, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:66
			succ Basic Block is :64
	BasicBlock:64
			Statement type:StmtExpr
			Statement:({
    if (bitMap[1].bits[0] == 3)
        ;
    else
        __assert_fail("bitMap[1].bits[0] == 3", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 195, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[1].bits[0] == 3) ? 1 : 0) , __extension__ ({
    if (bitMap[1].bits[0] == 3)
        ;
    else
        __assert_fail("bitMap[1].bits[0] == 3", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 195, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[2].bits[0] == 7) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[2].bits[0] == 7
			Conditional jump with condition: IfStmt
			succ Then Block is :63
			succ Else Block is :62
	BasicBlock:62
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[2].bits[0] == 7", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 196, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:63
			succ Basic Block is :61
	BasicBlock:61
			Statement type:StmtExpr
			Statement:({
    if (bitMap[2].bits[0] == 7)
        ;
    else
        __assert_fail("bitMap[2].bits[0] == 7", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 196, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[2].bits[0] == 7) ? 1 : 0) , __extension__ ({
    if (bitMap[2].bits[0] == 7)
        ;
    else
        __assert_fail("bitMap[2].bits[0] == 7", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 196, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[3].bits[0] == 15) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[3].bits[0] == 15
			Conditional jump with condition: IfStmt
			succ Then Block is :60
			succ Else Block is :59
	BasicBlock:59
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[3].bits[0] == 15", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 197, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:60
			succ Basic Block is :58
	BasicBlock:58
			Statement type:StmtExpr
			Statement:({
    if (bitMap[3].bits[0] == 15)
        ;
    else
        __assert_fail("bitMap[3].bits[0] == 15", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 197, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[3].bits[0] == 15) ? 1 : 0) , __extension__ ({
    if (bitMap[3].bits[0] == 15)
        ;
    else
        __assert_fail("bitMap[3].bits[0] == 15", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 197, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[4].bits[0] == 31) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[4].bits[0] == 31
			Conditional jump with condition: IfStmt
			succ Then Block is :57
			succ Else Block is :56
	BasicBlock:56
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[4].bits[0] == 31", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 198, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:57
			succ Basic Block is :55
	BasicBlock:55
			Statement type:StmtExpr
			Statement:({
    if (bitMap[4].bits[0] == 31)
        ;
    else
        __assert_fail("bitMap[4].bits[0] == 31", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 198, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[4].bits[0] == 31) ? 1 : 0) , __extension__ ({
    if (bitMap[4].bits[0] == 31)
        ;
    else
        __assert_fail("bitMap[4].bits[0] == 31", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 198, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[5].bits[0] == 63) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[5].bits[0] == 63
			Conditional jump with condition: IfStmt
			succ Then Block is :54
			succ Else Block is :53
	BasicBlock:53
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[5].bits[0] == 63", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 199, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:54
			succ Basic Block is :52
	BasicBlock:52
			Statement type:StmtExpr
			Statement:({
    if (bitMap[5].bits[0] == 63)
        ;
    else
        __assert_fail("bitMap[5].bits[0] == 63", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 199, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[5].bits[0] == 63) ? 1 : 0) , __extension__ ({
    if (bitMap[5].bits[0] == 63)
        ;
    else
        __assert_fail("bitMap[5].bits[0] == 63", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 199, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[6].bits[0] == 127) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[6].bits[0] == 127
			Conditional jump with condition: IfStmt
			succ Then Block is :51
			succ Else Block is :50
	BasicBlock:50
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[6].bits[0] == 127", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 200, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:51
			succ Basic Block is :49
	BasicBlock:49
			Statement type:StmtExpr
			Statement:({
    if (bitMap[6].bits[0] == 127)
        ;
    else
        __assert_fail("bitMap[6].bits[0] == 127", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 200, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[6].bits[0] == 127) ? 1 : 0) , __extension__ ({
    if (bitMap[6].bits[0] == 127)
        ;
    else
        __assert_fail("bitMap[6].bits[0] == 127", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 200, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[7].bits[0] == 255) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[7].bits[0] == 255
			Conditional jump with condition: IfStmt
			succ Then Block is :48
			succ Else Block is :47
	BasicBlock:47
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[7].bits[0] == 255", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 201, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:48
			succ Basic Block is :46
	BasicBlock:46
			Statement type:StmtExpr
			Statement:({
    if (bitMap[7].bits[0] == 255)
        ;
    else
        __assert_fail("bitMap[7].bits[0] == 255", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 201, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[7].bits[0] == 255) ? 1 : 0) , __extension__ ({
    if (bitMap[7].bits[0] == 255)
        ;
    else
        __assert_fail("bitMap[7].bits[0] == 255", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 201, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[8].bits[0] == 511) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[8].bits[0] == 511
			Conditional jump with condition: IfStmt
			succ Then Block is :45
			succ Else Block is :44
	BasicBlock:44
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[8].bits[0] == 511", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 202, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:45
			succ Basic Block is :43
	BasicBlock:43
			Statement type:StmtExpr
			Statement:({
    if (bitMap[8].bits[0] == 511)
        ;
    else
        __assert_fail("bitMap[8].bits[0] == 511", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 202, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[8].bits[0] == 511) ? 1 : 0) , __extension__ ({
    if (bitMap[8].bits[0] == 511)
        ;
    else
        __assert_fail("bitMap[8].bits[0] == 511", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 202, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[9].bits[0] == 1023) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[9].bits[0] == 1023
			Conditional jump with condition: IfStmt
			succ Then Block is :42
			succ Else Block is :41
	BasicBlock:41
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[9].bits[0] == 1023", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 203, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:42
			succ Basic Block is :40
	BasicBlock:40
			Statement type:StmtExpr
			Statement:({
    if (bitMap[9].bits[0] == 1023)
        ;
    else
        __assert_fail("bitMap[9].bits[0] == 1023", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 203, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[9].bits[0] == 1023) ? 1 : 0) , __extension__ ({
    if (bitMap[9].bits[0] == 1023)
        ;
    else
        __assert_fail("bitMap[9].bits[0] == 1023", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 203, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[10].bits[0] == 2047) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[10].bits[0] == 2047
			Conditional jump with condition: IfStmt
			succ Then Block is :39
			succ Else Block is :38
	BasicBlock:38
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[10].bits[0] == 2047", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 204, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:39
			succ Basic Block is :37
	BasicBlock:37
			Statement type:StmtExpr
			Statement:({
    if (bitMap[10].bits[0] == 2047)
        ;
    else
        __assert_fail("bitMap[10].bits[0] == 2047", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 204, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[10].bits[0] == 2047) ? 1 : 0) , __extension__ ({
    if (bitMap[10].bits[0] == 2047)
        ;
    else
        __assert_fail("bitMap[10].bits[0] == 2047", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 204, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[11].bits[0] == 4095) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[11].bits[0] == 4095
			Conditional jump with condition: IfStmt
			succ Then Block is :36
			succ Else Block is :35
	BasicBlock:35
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[11].bits[0] == 4095", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 205, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:36
			succ Basic Block is :34
	BasicBlock:34
			Statement type:StmtExpr
			Statement:({
    if (bitMap[11].bits[0] == 4095)
        ;
    else
        __assert_fail("bitMap[11].bits[0] == 4095", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 205, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[11].bits[0] == 4095) ? 1 : 0) , __extension__ ({
    if (bitMap[11].bits[0] == 4095)
        ;
    else
        __assert_fail("bitMap[11].bits[0] == 4095", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 205, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[12].bits[0] == 8191) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[12].bits[0] == 8191
			Conditional jump with condition: IfStmt
			succ Then Block is :33
			succ Else Block is :32
	BasicBlock:32
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[12].bits[0] == 8191", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 206, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:33
			succ Basic Block is :31
	BasicBlock:31
			Statement type:StmtExpr
			Statement:({
    if (bitMap[12].bits[0] == 8191)
        ;
    else
        __assert_fail("bitMap[12].bits[0] == 8191", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 206, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[12].bits[0] == 8191) ? 1 : 0) , __extension__ ({
    if (bitMap[12].bits[0] == 8191)
        ;
    else
        __assert_fail("bitMap[12].bits[0] == 8191", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 206, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[13].bits[0] == 16383) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[13].bits[0] == 16383
			Conditional jump with condition: IfStmt
			succ Then Block is :30
			succ Else Block is :29
	BasicBlock:29
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[13].bits[0] == 16383", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 207, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:30
			succ Basic Block is :28
	BasicBlock:28
			Statement type:StmtExpr
			Statement:({
    if (bitMap[13].bits[0] == 16383)
        ;
    else
        __assert_fail("bitMap[13].bits[0] == 16383", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 207, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[13].bits[0] == 16383) ? 1 : 0) , __extension__ ({
    if (bitMap[13].bits[0] == 16383)
        ;
    else
        __assert_fail("bitMap[13].bits[0] == 16383", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 207, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[14].bits[0] == 32767) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[14].bits[0] == 32767
			Conditional jump with condition: IfStmt
			succ Then Block is :27
			succ Else Block is :26
	BasicBlock:26
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[14].bits[0] == 32767", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 208, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:27
			succ Basic Block is :25
	BasicBlock:25
			Statement type:StmtExpr
			Statement:({
    if (bitMap[14].bits[0] == 32767)
        ;
    else
        __assert_fail("bitMap[14].bits[0] == 32767", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 208, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[14].bits[0] == 32767) ? 1 : 0) , __extension__ ({
    if (bitMap[14].bits[0] == 32767)
        ;
    else
        __assert_fail("bitMap[14].bits[0] == 32767", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 208, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[15].bits[0] == 65535) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[15].bits[0] == 65535
			Conditional jump with condition: IfStmt
			succ Then Block is :24
			succ Else Block is :23
	BasicBlock:23
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[15].bits[0] == 65535", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 209, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:24
			succ Basic Block is :22
	BasicBlock:22
			Statement type:StmtExpr
			Statement:({
    if (bitMap[15].bits[0] == 65535)
        ;
    else
        __assert_fail("bitMap[15].bits[0] == 65535", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 209, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[15].bits[0] == 65535) ? 1 : 0) , __extension__ ({
    if (bitMap[15].bits[0] == 65535)
        ;
    else
        __assert_fail("bitMap[15].bits[0] == 65535", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 209, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[16].bits[0] == 131071) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[16].bits[0] == 131071
			Conditional jump with condition: IfStmt
			succ Then Block is :21
			succ Else Block is :20
	BasicBlock:20
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[16].bits[0] == 131071", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 210, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:21
			succ Basic Block is :19
	BasicBlock:19
			Statement type:StmtExpr
			Statement:({
    if (bitMap[16].bits[0] == 131071)
        ;
    else
        __assert_fail("bitMap[16].bits[0] == 131071", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 210, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[16].bits[0] == 131071) ? 1 : 0) , __extension__ ({
    if (bitMap[16].bits[0] == 131071)
        ;
    else
        __assert_fail("bitMap[16].bits[0] == 131071", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 210, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[17].bits[0] == 262143) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[17].bits[0] == 262143
			Conditional jump with condition: IfStmt
			succ Then Block is :18
			succ Else Block is :17
	BasicBlock:17
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[17].bits[0] == 262143", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 211, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:18
			succ Basic Block is :16
	BasicBlock:16
			Statement type:StmtExpr
			Statement:({
    if (bitMap[17].bits[0] == 262143)
        ;
    else
        __assert_fail("bitMap[17].bits[0] == 262143", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 211, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[17].bits[0] == 262143) ? 1 : 0) , __extension__ ({
    if (bitMap[17].bits[0] == 262143)
        ;
    else
        __assert_fail("bitMap[17].bits[0] == 262143", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 211, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[18].bits[0] == 524287) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[18].bits[0] == 524287
			Conditional jump with condition: IfStmt
			succ Then Block is :15
			succ Else Block is :14
	BasicBlock:14
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[18].bits[0] == 524287", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 212, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:15
			succ Basic Block is :13
	BasicBlock:13
			Statement type:StmtExpr
			Statement:({
    if (bitMap[18].bits[0] == 524287)
        ;
    else
        __assert_fail("bitMap[18].bits[0] == 524287", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 212, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[18].bits[0] == 524287) ? 1 : 0) , __extension__ ({
    if (bitMap[18].bits[0] == 524287)
        ;
    else
        __assert_fail("bitMap[18].bits[0] == 524287", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 212, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[19].bits[0] == 1048575) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[19].bits[0] == 1048575
			Conditional jump with condition: IfStmt
			succ Then Block is :12
			succ Else Block is :11
	BasicBlock:11
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[19].bits[0] == 1048575", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 213, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:12
			succ Basic Block is :10
	BasicBlock:10
			Statement type:StmtExpr
			Statement:({
    if (bitMap[19].bits[0] == 1048575)
        ;
    else
        __assert_fail("bitMap[19].bits[0] == 1048575", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 213, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[19].bits[0] == 1048575) ? 1 : 0) , __extension__ ({
    if (bitMap[19].bits[0] == 1048575)
        ;
    else
        __assert_fail("bitMap[19].bits[0] == 1048575", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 213, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[20].bits[0] == 2097151) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[20].bits[0] == 2097151
			Conditional jump with condition: IfStmt
			succ Then Block is :9
			succ Else Block is :8
	BasicBlock:8
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[20].bits[0] == 2097151", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 214, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:9
			succ Basic Block is :7
	BasicBlock:7
			Statement type:StmtExpr
			Statement:({
    if (bitMap[20].bits[0] == 2097151)
        ;
    else
        __assert_fail("bitMap[20].bits[0] == 2097151", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 214, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[20].bits[0] == 2097151) ? 1 : 0) , __extension__ ({
    if (bitMap[20].bits[0] == 2097151)
        ;
    else
        __assert_fail("bitMap[20].bits[0] == 2097151", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 214, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[21].bits[0] == 4194303) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[21].bits[0] == 4194303
			Conditional jump with condition: IfStmt
			succ Then Block is :6
			succ Else Block is :5
	BasicBlock:5
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[21].bits[0] == 4194303", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 215, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:6
			succ Basic Block is :4
	BasicBlock:4
			Statement type:StmtExpr
			Statement:({
    if (bitMap[21].bits[0] == 4194303)
        ;
    else
        __assert_fail("bitMap[21].bits[0] == 4194303", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 215, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[21].bits[0] == 4194303) ? 1 : 0) , __extension__ ({
    if (bitMap[21].bits[0] == 4194303)
        ;
    else
        __assert_fail("bitMap[21].bits[0] == 4194303", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 215, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CStyleCastExpr
			Statement:(void)sizeof ((bitMap[22].bits[0] == 8388607) ? 1 : 0)
			Statement type:BinaryOperator
			Statement:bitMap[22].bits[0] == 8388607
			Conditional jump with condition: IfStmt
			succ Then Block is :3
			succ Else Block is :2
	BasicBlock:2
			Statement type:CallExpr
			Statement:__assert_fail("bitMap[22].bits[0] == 8388607", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 216, __extension__ __PRETTY_FUNCTION__)
			succ Basic Block is :0
	BasicBlock:3
			succ Basic Block is :1
	BasicBlock:1
			Statement type:StmtExpr
			Statement:({
    if (bitMap[22].bits[0] == 8388607)
        ;
    else
        __assert_fail("bitMap[22].bits[0] == 8388607", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 216, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:BinaryOperator
			Statement:(void)sizeof ((bitMap[22].bits[0] == 8388607) ? 1 : 0) , __extension__ ({
    if (bitMap[22].bits[0] == 8388607)
        ;
    else
        __assert_fail("bitMap[22].bits[0] == 8388607", "/home/windoctober/Desktop/Clang-based-Invariant-Generator/Benchmark/mixed array pointer/simpleRFC32.c", 216, __extension__ __PRETTY_FUNCTION__);
})
			Statement type:CallExpr
			Statement:free(ppStart)
			Statement type:CallExpr
			Statement:free(ppEnd)
			Statement type:IntegerLiteral
			Statement:0
			Statement type:ReturnStmt
			Statement:return 0;

			succ Basic Block is :0
	BasicBlock:87
			Statement type:DeclStmt
			Statement:int j = 0;

			succ Basic Block is :86
	BasicBlock:86
			Statement type:BinaryOperator
			Statement:j < (32 * 1)
			Conditional jump with condition: ForStmt
			succ Loop body Block is :85
			succ Exit Loop Block is :80
	BasicBlock:80
			Statement type:BinaryOperator
			Statement:changed == 1
			Conditional jump with condition: IfStmt
			succ Then Block is :79
			succ Else Block is :76
	BasicBlock:76
			Statement type:BinaryOperator
			Statement:id >= 0
			Conditional jump with condition: IfStmt
			succ Then Block is :75
			succ Else Block is :74
	BasicBlock:74
			Statement type:UnaryOperator
			Statement:++i
			succ Basic Block is :88
	BasicBlock:75
			Statement type:BinaryOperator
			Statement:*(table + i) = id
			succ Basic Block is :74
	BasicBlock:79
			Statement type:CallExpr
			Statement:findBitMap(bitMap, used, bits)
			Statement type:BinaryOperator
			Statement:id = findBitMap(bitMap, used, bits)
			Statement type:BinaryOperator
			Statement:id < 0
			Conditional jump with condition: IfStmt
			succ Then Block is :78
			succ Else Block is :77
	BasicBlock:77
			Statement type:BinaryOperator
			Statement:changed = 0
			succ Basic Block is :76
	BasicBlock:78
			Statement type:BinaryOperator
			Statement:id = used
			Statement type:BinaryOperator
			Statement:bitMap[used].mapId = used
			Statement type:BinaryOperator
			Statement:bitMap[used].bits[0] = bits[0]
			Statement type:UnaryOperator
			Statement:used++
			succ Basic Block is :77
	BasicBlock:85
			Statement type:DeclStmt
			Statement:int offset = i * (32 * 1) + j;

			Statement type:DeclStmt
			Statement:int end = *(ppEnd + offset);

			Statement type:BinaryOperator
			Statement:end >= 0
			Conditional jump with condition: IfStmt
			succ Then Block is :84
			succ Else Block is :83
	BasicBlock:83
			Statement type:DeclStmt
			Statement:int start = *(ppStart + offset);

			Statement type:BinaryOperator
			Statement:start >= 0
			Conditional jump with condition: IfStmt
			succ Then Block is :82
			succ Else Block is :81
	BasicBlock:81
			Statement type:UnaryOperator
			Statement:++j
			succ Basic Block is :86
	BasicBlock:82
			Statement type:CallExpr
			Statement:setBit(bits, start)
			Statement type:BinaryOperator
			Statement:changed = 1
			succ Basic Block is :81
	BasicBlock:84
			Statement type:CallExpr
			Statement:clearBit(bits, end)
			Statement type:BinaryOperator
			Statement:changed = 1
			succ Basic Block is :83
	BasicBlock:91
			Statement type:DeclStmt
			Statement:int start = rules[i].start;

			Statement type:DeclStmt
			Statement:int index = 0;

			Statement type:DeclStmt
			Statement:int offset = start * (32 * 1) + index;

			Statement type:BinaryOperator
			Statement:*(ppStart + offset) = i
			Statement type:BinaryOperator
			Statement:startIndex[start] = 1
			Statement type:DeclStmt
			Statement:int end = rules[i].end + 1;

			Statement type:BinaryOperator
			Statement:index = 0
			Statement type:BinaryOperator
			Statement:offset = end * (32 * 1)
			Statement type:BinaryOperator
			Statement:*(ppEnd + offset) = i
			Statement type:BinaryOperator
			Statement:endIndex[end] = 1
			succ Basic Block is :90
	BasicBlock:90
			Statement type:UnaryOperator
			Statement:++i
			succ Basic Block is :92
	BasicBlock:95
			Statement type:BinaryOperator
			Statement:rules[i].id = i
			Statement type:BinaryOperator
			Statement:rules[i].start = i + 1
			Statement type:BinaryOperator
			Statement:rules[i].end = i + 50
			succ Basic Block is :94
	BasicBlock:94
			Statement type:UnaryOperator
			Statement:i++
			succ Basic Block is :96
CalleeFunction:clearBit
the entry block of the function is: Basic Block 2
the exit block of the function is: Basic Block 0
	BasicBlock:2
			succ Basic Block is :1
	BasicBlock:1
			Statement type:DeclStmt
			Statement:U32 index = bit / 32;

			Statement type:DeclStmt
			Statement:U32 offset = bit % 32;

			Statement type:CompoundAssignOperator
			Statement:*(bits + index) &= ~((U32)1 << offset)
			succ Basic Block is :0
	BasicBlock:0
CalleeFunction:setBit
the entry block of the function is: Basic Block 2
the exit block of the function is: Basic Block 0
	BasicBlock:2
			succ Basic Block is :1
	BasicBlock:1
			Statement type:DeclStmt
			Statement:U32 index = bit / 32;

			Statement type:DeclStmt
			Statement:U32 offset = bit % 32;

			Statement type:CompoundAssignOperator
			Statement:*(bits + index) |= (U32)1 << offset
			succ Basic Block is :0
	BasicBlock:0
CalleeFunction:findBitMap
the entry block of the function is: Basic Block 7
the exit block of the function is: Basic Block 0
	BasicBlock:7
			succ Basic Block is :6
	BasicBlock:6
			Statement type:DeclStmt
			Statement:int matched = 1;

			Statement type:DeclStmt
			Statement:int i = 0;

			succ Basic Block is :5
	BasicBlock:5
			Statement type:BinaryOperator
			Statement:i < used
			Conditional jump with condition: ForStmt
			succ Loop body Block is :4
			succ Exit Loop Block is :1
	BasicBlock:1
			Statement type:UnaryOperator
			Statement:-1
			Statement type:ReturnStmt
			Statement:return -1;

			succ Basic Block is :0
	BasicBlock:0
	BasicBlock:4
			Statement type:DeclStmt
			Statement:BitMap *pTmp = bitMap + i;

			Statement type:CallExpr
			Statement:isMatch(pTmp->bits, bits)
			Statement type:DeclStmt
			Statement:int matched = isMatch(pTmp->bits, bits);

			Statement type:ImplicitCastExpr
			Statement:matched
			Conditional jump with condition: IfStmt
			succ Then Block is :3
			succ Else Block is :2
	BasicBlock:2
			Statement type:UnaryOperator
			Statement:++i
			succ Basic Block is :5
	BasicBlock:3
			Statement type:IntegerLiteral
			Statement:0
			Statement type:ReturnStmt
			Statement:return 0;

			succ Basic Block is :0
