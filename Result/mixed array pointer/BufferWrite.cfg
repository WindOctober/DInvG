Function:BufferWrite
the entry block of the function is: Basic Block 8
the exit block of the function is: Basic Block 0
	BasicBlock:8
			succ Basic Block is :7
	BasicBlock:7
			Statement type:DeclStmt
			Statement:int i = 0;

			succ Basic Block is :6
	BasicBlock:6
			Statement type:BinaryOperator
			Statement:i < count
			Conditional jump with condition: ForStmt
			succ Loop body Block is :5
			succ Exit Loop Block is :2
	BasicBlock:2
			Statement type:RecoveryExpr
			Statement:<recovery-expr>()
			Conditional jump with condition: IfStmt
			succ Then Block is :1
			succ Else Block is :0
	BasicBlock:0
	BasicBlock:1
			succ Basic Block is :0
	BasicBlock:5
			Statement type:BinaryOperator
			Statement:file.buffer[file.buffer_len] = input[count]
			Statement type:UnaryOperator
			Statement:++file.buffer_len
			Statement type:BinaryOperator
			Statement:<recovery-expr>(file) == <recovery-expr>()
			Conditional jump with condition: IfStmt
			succ Then Block is :4
			succ Else Block is :3
	BasicBlock:3
			Statement type:UnaryOperator
			Statement:++i
			succ Basic Block is :6
	BasicBlock:4
			Statement type:RecoveryExpr
			Statement:<recovery-expr>(memcpy, file.content + file.cur, file.buffer, 8)
			Statement type:CompoundAssignOperator
			Statement:file.cur += file.buffer_len
			Statement type:BinaryOperator
			Statement:file.buffer_len = 0
			succ Basic Block is :3
