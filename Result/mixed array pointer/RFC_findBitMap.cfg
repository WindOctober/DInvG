Function:isMatch
the entry block of the function is: Basic Block 7
the exit block of the function is: Basic Block 0
	BasicBlock:7
			succ Basic Block is :6
	BasicBlock:6
			Statement type:DeclStmt
			Statement:int ret = 1;

			Statement type:DeclStmt
			Statement:int j = 0;

			succ Basic Block is :5
	BasicBlock:5
			Statement type:BinaryOperator
			Statement:j < 1
			Conditional jump with condition: ForStmt
			succ Loop body Block is :4
			succ Exit Loop Block is :1
	BasicBlock:1
			Statement type:ImplicitCastExpr
			Statement:ret
			Statement type:ReturnStmt
			Statement:return ret;

			succ Basic Block is :0
	BasicBlock:0
	BasicBlock:4
			Statement type:BinaryOperator
			Statement:pTmpbits[j] != bits[j]
			Conditional jump with condition: IfStmt
			succ Then Block is :3
			succ Else Block is :2
	BasicBlock:2
			Statement type:UnaryOperator
			Statement:++j
			succ Basic Block is :5
	BasicBlock:3
			Statement type:BinaryOperator
			Statement:ret = 0
			Conditional jump with condition: BreakStmt
Function:findBitMap
the entry block of the function is: Basic Block 7
the exit block of the function is: Basic Block 0
	BasicBlock:7
			succ Basic Block is :6
	BasicBlock:6
			Statement type:DeclStmt
			Statement:int matched = 1;

			Statement type:DeclStmt
			Statement:int i = 0;

			succ Basic Block is :5
	BasicBlock:5
			Statement type:BinaryOperator
			Statement:i < used
			Conditional jump with condition: ForStmt
			succ Loop body Block is :4
			succ Exit Loop Block is :1
	BasicBlock:1
			Statement type:UnaryOperator
			Statement:-1
			Statement type:ReturnStmt
			Statement:return -1;

			succ Basic Block is :0
	BasicBlock:0
	BasicBlock:4
			Statement type:DeclStmt
			Statement:BitMap *pTmp = bitMap + i;

			Statement type:CallExpr
			Statement:isMatch(pTmp->bits, bits)
			Statement type:BinaryOperator
			Statement:matched = isMatch(pTmp->bits, bits)
			Statement type:ImplicitCastExpr
			Statement:matched
			Conditional jump with condition: IfStmt
			succ Then Block is :3
			succ Else Block is :2
	BasicBlock:2
			Statement type:UnaryOperator
			Statement:++i
			succ Basic Block is :5
	BasicBlock:3
			Statement type:ImplicitCastExpr
			Statement:pTmp->mapId
			Statement type:ReturnStmt
			Statement:return pTmp->mapId;

			succ Basic Block is :0
CalleeFunction:isMatch
the entry block of the function is: Basic Block 7
the exit block of the function is: Basic Block 0
	BasicBlock:7
			succ Basic Block is :6
	BasicBlock:6
			Statement type:DeclStmt
			Statement:int ret = 1;

			Statement type:DeclStmt
			Statement:int j = 0;

			succ Basic Block is :5
	BasicBlock:5
			Statement type:BinaryOperator
			Statement:j < 1
			Conditional jump with condition: ForStmt
			succ Loop body Block is :4
			succ Exit Loop Block is :1
	BasicBlock:1
			Statement type:ImplicitCastExpr
			Statement:ret
			Statement type:ReturnStmt
			Statement:return ret;

			succ Basic Block is :0
	BasicBlock:0
	BasicBlock:4
			Statement type:BinaryOperator
			Statement:pTmpbits[j] != bits[j]
			Conditional jump with condition: IfStmt
			succ Then Block is :3
			succ Else Block is :2
	BasicBlock:2
			Statement type:UnaryOperator
			Statement:++j
			succ Basic Block is :5
	BasicBlock:3
			Statement type:BinaryOperator
			Statement:ret = 0
			Conditional jump with condition: BreakStmt
