
- Initialize_before_Parser doing...Done!

- Scan_Input doing...
argc: 2
argv: ./bin/origin
argv: newdfs_seq_propagation
Done!

- Is yacc parsing done? 0

/----------------------------- 
| Status before Solver: 
----------------------------- 
| Debug ID # 0
| Debug_2 ID # 0
| Debug_3 ID # 0
| Print Tree : 1
| Strategy ID # 8
| Strategy name : newdfs_seq_propagation
| DFS Search method : target_prior2
| Sequences Divide method : two_per_group
| Projection method : kohler_improvement_eliminate_c
| Local invariants to be generated : 1
| Increasing invariants to be generated : 1
| Falsepath to be enabled : 1
| Transition-sat to be enabled : 1
| Exit-Transition is computed : 0
| Display Disjunctive Invariants : 1
| Display Array Invariants : 0
| Weave time allowed : 360000
\----------------------------- 

----------------------------- 
| The Locations read in are: 
----------------------------- 

Location: b1
# of variables: 12
「 l: 0, n: 12, nd: 39 」
Initial Condition: [[ 
| 
├ 1 * n -8 = 0 
├ 1 * m -15 = 0 
├ 1 * j -10 = 0 
├ 1 * k -8 = 0 
├ 1 * i -1 = 0 
| 
]]
Invariant: [[ 
| 
├  True
| 
]]

Location: b2
# of variables: 12
「 l: 13, n: 12, nd: 39 」
[ no initial condition set]
Invariant: [[ 
| 
├  True
| 
]]

Location: le
# of variables: 12
「 l: 26, n: 12, nd: 39 」
[ no initial condition set]
Invariant: [[ 
| 
├  True
| 
]]
----------------------------- 
| The Transitions read in are: 
----------------------------- 
Transition Relation: t1_1
Pre-Location:b1   Post-Location:b1
Transition Relation: [[
| 
├ 1 * n -1 * `n  = 0 
├ 1 * m -1 * `m  = 0 
├ 1 * j -2 * n  + 3 * `k -1 * `j  = 0 
├ 1 * i -1 * `i  + 1 = 0 
├ -1 * i  + 1 * m -1 >= 0
├ -1 * j  + 2 * n -1 * `k  >= 0
├ 1 * j -3 * n  + 3 * `k -1 >= 0
├ 1 * j -1 * n -1 >= 0
| 
]]
Guard: [[
| 
├ -1 * i  + 1 * m -1 >= 0
├ 1 * j -1 * n -1 >= 0
| 
]]
Update: [[
| 
├ 1 * j -2 * n  + 3 * `k -1 * `j  = 0 
├ 1 * i -1 * `i  + 1 = 0 
├ -1 * j  + 2 * n -1 * `k  >= 0
├ 1 * j -3 * n  + 3 * `k -1 >= 0
| 
]]
Preserved: [[
| 
├  m
├  n
| 
]]

- Transition Relation t1_1 Ends
----------------------------- 
Transition Relation: t1_2
Pre-Location:b1   Post-Location:b2
Transition Relation: [[
| 
├ 1 * n -1 * `n  = 0 
├ 1 * m -1 * `m  = 0 
├ 1 * j -2 * n  + 3 * `k -1 * `j  = 0 
├ 1 * i -1 * `i  + 1 = 0 
├ -1 * i  + 1 * m -1 >= 0
├ -1 * j  + 2 * n -1 * `k  >= 0
├ -1 * j  + 3 * n -3 * `k  >= 0
├ 1 * j -2 * n  + 2 * `k -1 >= 0
├ 1 * j -1 * n -1 >= 0
| 
]]
Guard: [[
| 
├ -1 * i  + 1 * m -1 >= 0
├ 1 * j -1 * n -1 >= 0
| 
]]
Update: [[
| 
├ 1 * j -2 * n  + 3 * `k -1 * `j  = 0 
├ 1 * i -1 * `i  + 1 = 0 
├ -1 * j  + 2 * n -1 * `k  >= 0
├ -1 * j  + 3 * n -3 * `k  >= 0
├ 1 * j -2 * n  + 2 * `k -1 >= 0
| 
]]
Preserved: [[
| 
├  m
├  n
| 
]]

- Transition Relation t1_2 Ends
----------------------------- 
Transition Relation: t1_e
Pre-Location:b1   Post-Location:le
Transition Relation: [[
| 
├ 1 * n -1 * `n  = 0 
├ 1 * j -2 * n  + 3 * `k -1 * `j  = 0 
├ 1 * i -1 * m  = 0 
├ 1 * i -1 * `i  + 1 = 0 
├ 1 * i -1 * `m  = 0 
├ -1 * j  + 2 * n -1 * `k  >= 0
├ 1 * j -2 * n  + 2 * `k -1 >= 0
├ 1 * j -1 * n -1 >= 0
| 
]]
Guard: [[
| 
├ 1 * i -1 * m  = 0 
├ 1 * j -1 * n -1 >= 0
| 
]]
Update: [[
| 
├ 1 * i -1 * `m  = 0 
├ 1 * j -2 * n  + 3 * `k -1 * `j  = 0 
├ 1 * i -1 * `i  + 1 = 0 
├ -1 * j  + 2 * n -1 * `k  >= 0
├ 1 * j -2 * n  + 2 * `k -1 >= 0
| 
]]
Preserved: [[
| 
├  n
| 
]]

- Transition Relation t1_e Ends
----------------------------- 
Transition Relation: t2_2
Pre-Location:b2   Post-Location:b2
Transition Relation: [[
| 
├ 1 * n -1 * `k  = 0 
├ 1 * n -1 * `n  = 0 
├ 1 * m -1 * `m  = 0 
├ 1 * j  + 1 * n -1 * `j  = 0 
├ 1 * i -1 * `i  + 1 = 0 
├ -1 * i  + 1 * m -1 >= 0
├ -1 * j  >= 0
├ -1 * j  + 1 * n  >= 0
| 
]]
Guard: [[
| 
├ -1 * i  + 1 * m -1 >= 0
├ -1 * j  >= 0
├ -1 * j  + 1 * n  >= 0
| 
]]
Update: [[
| 
├ 1 * j  + 1 * n -1 * `j  = 0 
├ 1 * n -1 * `k  = 0 
├ 1 * i -1 * `i  + 1 = 0 
| 
]]
Preserved: [[
| 
├  m
├  n
| 
]]

- Transition Relation t2_2 Ends
----------------------------- 
Transition Relation: t2_1
Pre-Location:b2   Post-Location:b1
Transition Relation: [[
| 
├ 1 * n -1 * `k  = 0 
├ 1 * n -1 * `n  = 0 
├ 1 * m -1 * `m  = 0 
├ 1 * j  + 1 * n -1 * `j  = 0 
├ 1 * i -1 * `i  + 1 = 0 
├ -1 * i  + 1 * m -1 >= 0
├ -1 * j  + 1 * n  >= 0
├ 1 * j -1 >= 0
| 
]]
Guard: [[
| 
├ -1 * i  + 1 * m -1 >= 0
├ -1 * j  + 1 * n  >= 0
├ 1 * j -1 >= 0
| 
]]
Update: [[
| 
├ 1 * j  + 1 * n -1 * `j  = 0 
├ 1 * n -1 * `k  = 0 
├ 1 * i -1 * `i  + 1 = 0 
| 
]]
Preserved: [[
| 
├  m
├  n
| 
]]

- Transition Relation t2_1 Ends
----------------------------- 
Transition Relation: t2_e
Pre-Location:b2   Post-Location:le
Transition Relation: [[
| 
├ 1 * n -1 * `k  = 0 
├ 1 * n -1 * `n  = 0 
├ 1 * j  + 1 * n -1 * `j  = 0 
├ 1 * i -1 * m  = 0 
├ 1 * i -1 * `i  + 1 = 0 
├ 1 * i -1 * `m  = 0 
├ -1 * j  >= 0
├ -1 * j  + 1 * n  >= 0
| 
]]
Guard: [[
| 
├ 1 * i -1 * m  = 0 
├ -1 * j  >= 0
├ -1 * j  + 1 * n  >= 0
| 
]]
Update: [[
| 
├ 1 * i -1 * `m  = 0 
├ 1 * j  + 1 * n -1 * `j  = 0 
├ 1 * n -1 * `k  = 0 
├ 1 * i -1 * `i  + 1 = 0 
| 
]]
Preserved: [[
| 
├  n
| 
]]

- Transition Relation t2_e Ends
----------------------------- 

/----------------------------- 
| Adjacency Matrix for Location and Transition: 
----------------------------- 
| Input: 6 transitions
----------------------------- 
| [#] is transition_index
| b1: [ 0 ]->b1;  [ 1 ]->b2;  [ 2 ]->le;  
| b2: [ 4 ]->b1;  [ 3 ]->b2;  [ 5 ]->le;  
| le: []->b1;  []->b2;  []->le;  
----------------------------- 
| Output: 6 transitions
\----------------------------- 

> > > Location::compute_dual_constraints(), Location: b1's Initialization
- Initial-Value is not empty: 
  K = 8, I = 15, F = 10, C = 8, A = 1
< < < Location::compute_dual_constraints(), Location: b1's Initialization

> > > Location::compute_dual_constraints(), Location: b2's Initialization
- Initial-Value is not empty: 
  true
< < < ( !polyset ) in Location::b2

> > > Location::compute_dual_constraints(), Location: le's Initialization
- Initial-Value is not empty: 
  true
< < < ( !polyset ) in Location::le

> > > (intra transition) In compute_consecution_constraints(), TransitionRelation : t1_1
Current transition has poly as follows: 
  K - W = 0, I - U = 0, F - 2*K + 3*O - R = 0, A - M = -1, -A + I >= 1, -F + 2*K - O >= 0, F - 3*K + 3*O >= 1, F - K >= 1
  Compute this transition: 1
  pushing back clump with 1 Polyhedra (in falsepath)...
< < < Intra-Transition::t1_1 prepare to push back clump with 1 Polyhedra

> > > (inter transition) In compute_consecution_01(), TransitionRelation : t1_2
Current transition has poly as follows: 
  K - W = 0, I - U = 0, F - 2*K + 3*O - R = 0, A - M = -1, -A + I >= 1, -F + 2*K - O >= 0, -F + 3*K - 3*O >= 0, F - 2*K + 2*O >= 1, F - K >= 1
  Compute this transition: 1
  pushing back clump with 1 Polyhedra...
  pushing back clump with 2 Polyhedra...
  pushing back clump with 3 Polyhedra (in falsepath)...
< < < Inter-Transition::t1_2 pushing back clump with 3 Polyhedra...done

> > > (inter transition) In compute_consecution_01(), TransitionRelation : t1_e
Current transition has poly as follows: 
  K - W = 0, F - 2*K + 3*O - R = 0, A - I = 0, A - M = -1, A - U = 0, -F + 2*K - O >= 0, F - 2*K + 2*O >= 1, F - K >= 1
  Compute this transition: 0
< < < Inter-Transition::t1_e pushing back clump with 0 Polyhedra...done

> > > (intra transition) In compute_consecution_constraints(), TransitionRelation : t2_2
Current transition has poly as follows: 
  K - O = 0, K - W = 0, I - U = 0, F + K - R = 0, A - M = -1, -A + I >= 1, -F >= 0, -F + K >= 0
  Compute this transition: 1
  pushing back clump with 1 Polyhedra (in falsepath)...
< < < Intra-Transition::t2_2 prepare to push back clump with 1 Polyhedra

> > > (inter transition) In compute_consecution_01(), TransitionRelation : t2_1
Current transition has poly as follows: 
  K - O = 0, K - W = 0, I - U = 0, F + K - R = 0, A - M = -1, -A + I >= 1, -F + K >= 0, F >= 1
  Compute this transition: 1
  pushing back clump with 1 Polyhedra...
  pushing back clump with 2 Polyhedra...
  pushing back clump with 3 Polyhedra (in falsepath)...
< < < Inter-Transition::t2_1 pushing back clump with 3 Polyhedra...done

> > > (inter transition) In compute_consecution_01(), TransitionRelation : t2_e
Current transition has poly as follows: 
  K - O = 0, K - W = 0, F + K - R = 0, A - I = 0, A - M = -1, A - U = 0, -F >= 0, -F + K >= 0
  Compute this transition: 0
< < < Inter-Transition::t2_e pushing back clump with 0 Polyhedra...done
> > > Location::b1 already has clump with 1 Polyhedra...
> > > Location::b1 altogether pushing back clump with 3 Polyhedra...done
> > > Location::b2 already has clump with 1 Polyhedra...
> > > Location::b2 altogether pushing back clump with 3 Polyhedra...done
> > > Location::le already has clump with 0 Polyhedra...
> > > Location::le altogether pushing back clump with 1 Polyhedra...done

/ Start to solve Location b1
/ Using target_prior2
/ Generate Sequences
> > > Tree::sequences generation()
> > > Tree::two_per_group()

From hb:4 To lb:4
> > > Tree::dfs_sub_sequences_traverse()
( Weaved Prune Tree, current length is 1
( 4  ⋁  [0] 1  2  --  b: 0 --  Location_Intra:: b1
( 3  ⋁   0  1  2  --  b: 0 --  Transition_Inter:: t2_1
( 2  ⋁   0  1  2  --  b: 0 --  Transition_Inter:: t1_2
( 1  ⋁   0        --  b: 0 --  Location_Intra:: le
( 0  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b2
( Weaved Prune Tree, current length is 1
( 4  ⋁   0 [1] 2  --  b: 0 --  Location_Intra:: b1
( 3  ⋁   0  1  2  --  b: 0 --  Transition_Inter:: t2_1
( 2  ⋁   0  1  2  --  b: 0 --  Transition_Inter:: t1_2
( 1  ⋁   0        --  b: 0 --  Location_Intra:: le
( 0  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b2
Above part, the 1th poly is erased by next poly in back-prune
( Weaved Prune Tree, current length is 1
( 4  ⋁   0  1 [2] --  b: 0 --  Location_Intra:: b1
( 3  ⋁   0  1  2  --  b: 0 --  Transition_Inter:: t2_1
( 2  ⋁   0  1  2  --  b: 0 --  Transition_Inter:: t1_2
( 1  ⋁   0        --  b: 0 --  Location_Intra:: le
( 0  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b2
This sub_sequences invd_vp has weaved:2
< < < Tree::dfs_sub_sequences_traverse()
sub_sequences.size()/capacity():2/2
This PRE_LOC has banged:1

From hb:3 To lb:2
> > > Tree::dfs_sub_sequences_traverse()
( Weaved Prune Tree, current length is 2
( 4  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b1
( 3  ⋁  [0] 1  2  --  b: 0 --  Transition_Inter:: t2_1
( 2  ⋁  [0] 1  2  --  b: 0 --  Transition_Inter:: t1_2
( 1  ⋁   0        --  b: 0 --  Location_Intra:: le
( 0  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b2
( Weaved Prune Tree, current length is 2
( 4  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b1
( 3  ⋁  [0] 1  2  --  b: 0 --  Transition_Inter:: t2_1
( 2  ⋁   0 [1] 2  --  b: 0 --  Transition_Inter:: t1_2
( 1  ⋁   0        --  b: 0 --  Location_Intra:: le
( 0  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b2
( Banged Prune Tree, current length is 2
( in related transition
( 4  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b1
( 3  ⋁  [0] 1  2  --  b: 0 --  Transition_Inter:: t2_1
( 2  ⋁   0  1 [2] --  b: 1 --  Transition_Inter:: t1_2
( 1  ⋁   0        --  b: 0 --  Location_Intra:: le
( 0  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b2
( Weaved Prune Tree, current length is 2
( 4  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b1
( 3  ⋁   0 [1] 2  --  b: 0 --  Transition_Inter:: t2_1
( 2  ⋁  [0] 1  2  --  b: 1 --  Transition_Inter:: t1_2
( 1  ⋁   0        --  b: 0 --  Location_Intra:: le
( 0  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b2
( Weaved Prune Tree, current length is 2
( 4  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b1
( 3  ⋁   0 [1] 2  --  b: 0 --  Transition_Inter:: t2_1
( 2  ⋁   0 [1] 2  --  b: 1 --  Transition_Inter:: t1_2
( 1  ⋁   0        --  b: 0 --  Location_Intra:: le
( 0  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b2
Above part, the 3th poly is erased by next poly in back-prune
( Banged Prune Tree, current length is 2
( in related transition
( 4  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b1
( 3  ⋁   0 [1] 2  --  b: 0 --  Transition_Inter:: t2_1
( 2  ⋁   0  1 [2] --  b: 2 --  Transition_Inter:: t1_2
( 1  ⋁   0        --  b: 0 --  Location_Intra:: le
( 0  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b2
( Banged Prune Tree, current length is 2
( in related transition
( 4  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b1
( 3  ⋁   0  1 [2] --  b: 0 --  Transition_Inter:: t2_1
( 2  ⋁  [0] 1  2  --  b: 3 --  Transition_Inter:: t1_2
( 1  ⋁   0        --  b: 0 --  Location_Intra:: le
( 0  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b2
( Banged Prune Tree, current length is 2
( in related transition
( 4  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b1
( 3  ⋁   0  1 [2] --  b: 0 --  Transition_Inter:: t2_1
( 2  ⋁   0 [1] 2  --  b: 4 --  Transition_Inter:: t1_2
( 1  ⋁   0        --  b: 0 --  Location_Intra:: le
( 0  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b2
( Banged Prune Tree, current length is 2
( in related transition
( 4  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b1
( 3  ⋁   0  1 [2] --  b: 0 --  Transition_Inter:: t2_1
( 2  ⋁   0  1 [2] --  b: 5 --  Transition_Inter:: t1_2
( 1  ⋁   0        --  b: 0 --  Location_Intra:: le
( 0  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b2
This sub_sequences invd_vp has weaved:3
< < < Tree::dfs_sub_sequences_traverse()
sub_sequences.size()/capacity():3/4
This PRE_LOC has banged:7

From hb:1 To lb:0
> > > Tree::dfs_sub_sequences_traverse()
( Weaved Prune Tree, current length is 2
( 4  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b1
( 3  ⋁   0  1  2  --  b: 0 --  Transition_Inter:: t2_1
( 2  ⋁   0  1  2  --  b: 5 --  Transition_Inter:: t1_2
( 1  ⋁  [0]       --  b: 0 --  Location_Intra:: le
( 0  ⋁  [0] 1  2  --  b: 0 --  Location_Intra:: b2
( Weaved Prune Tree, current length is 2
( 4  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b1
( 3  ⋁   0  1  2  --  b: 0 --  Transition_Inter:: t2_1
( 2  ⋁   0  1  2  --  b: 5 --  Transition_Inter:: t1_2
( 1  ⋁  [0]       --  b: 0 --  Location_Intra:: le
( 0  ⋁   0 [1] 2  --  b: 0 --  Location_Intra:: b2
( Weaved Prune Tree, current length is 2
( 4  ⋁   0  1  2  --  b: 0 --  Location_Intra:: b1
( 3  ⋁   0  1  2  --  b: 0 --  Transition_Inter:: t2_1
( 2  ⋁   0  1  2  --  b: 5 --  Transition_Inter:: t1_2
( 1  ⋁  [0]       --  b: 0 --  Location_Intra:: le
( 0  ⋁   0  1 [2] --  b: 0 --  Location_Intra:: b2
This sub_sequences invd_vp has weaved:3
< < < Tree::dfs_sub_sequences_traverse()
sub_sequences.size()/capacity():3/4
This PRE_LOC has banged:7
< < < Tree::two_per_group()
< < < Tree::sequences generation()
- ( !has_initial_poly_set ) in Location::b2
- ( !has_initial_poly_set ) in Location::le

/ Start to solve Location b1
/ Using target_prior2
/ Read(Traverse) Sequences
> > > Tree::dfs_sequences_traverse()
( Banged Prune Tree, current length is 5
( in unrelated transition
( 4  ⋁   0 [1] 2  --  b: 0 --  Location:: b1
( 3  ⋁  [0] 1  2  --  b: 0 --  Transition:: t2_1
( 2  ⋁  [0] 1  2  --  b: 0 --  Transition:: t1_2
( 1  ⋁  [0]       --  b: 0 --  Location:: le
( 0  ⋁  [0] 1  2  --  b: 1 --  Location:: b2

sequence:10001
/-----------------------------
( Weaved Prune Tree, current length is 5
( 4  ⋁   0 [1] 2  --  b: 0 --  Location:: b1
( 3  ⋁  [0] 1  2  --  b: 0 --  Transition:: t2_1
( 2  ⋁  [0] 1  2  --  b: 0 --  Transition:: t1_2
( 1  ⋁  [0]       --  b: 0 --  Location:: le
( 0  ⋁   0 [1] 2  --  b: 1 --  Location:: b2
For location: b1
「 l: 0, n: 12, nd: 39 」
> > > Project_by_Kohler(), doing...
< < < Project_by_Kohler(), done!

- Have Collected 1 invariant(s)
- The collect_invariants Time Taken (0.01s) = 0
\-----------------------------

sequence:10002
/-----------------------------
( Weaved Prune Tree, current length is 5
( 4  ⋁   0 [1] 2  --  b: 0 --  Location:: b1
( 3  ⋁  [0] 1  2  --  b: 0 --  Transition:: t2_1
( 2  ⋁  [0] 1  2  --  b: 0 --  Transition:: t1_2
( 1  ⋁  [0]       --  b: 0 --  Location:: le
( 0  ⋁   0  1 [2] --  b: 1 --  Location:: b2
For location: b1
「 l: 0, n: 12, nd: 39 」
> > > Project_by_Kohler(), doing...
< < < Project_by_Kohler(), done!

- Have Collected 2 invariant(s)
- The collect_invariants Time Taken (0.01s) = 0
\-----------------------------

sequence:10100
/-----------------------------
( Weaved Prune Tree, current length is 5
( 4  ⋁   0 [1] 2  --  b: 0 --  Location:: b1
( 3  ⋁  [0] 1  2  --  b: 0 --  Transition:: t2_1
( 2  ⋁   0 [1] 2  --  b: 0 --  Transition:: t1_2
( 1  ⋁  [0]       --  b: 0 --  Location:: le
( 0  ⋁  [0] 1  2  --  b: 1 --  Location:: b2
For location: b1
「 l: 0, n: 12, nd: 39 」
> > > Project_by_Kohler(), doing...
< < < Project_by_Kohler(), done!

- Have Collected 3 invariant(s)
- The collect_invariants Time Taken (0.01s) = 1
\-----------------------------
( Banged Prune Tree, current length is 4
( in unrelated transition
( 4  ⋁   0 [1] 2  --  b: 0 --  Location:: b1
( 3  ⋁  [0] 1  2  --  b: 0 --  Transition:: t2_1
( 2  ⋁   0 [1] 2  --  b: 0 --  Transition:: t1_2
( 1  ⋁  [0]       --  b: 1 --  Location:: le
( 0  ⋁   0  1  2  --  b: 1 --  Location:: b2
( Banged Prune Tree, current length is 2
( in related transition
( 4  ⋁   0 [1] 2  --  b: 0 --  Location:: b1
( 3  ⋁   0 [1] 2  --  b: 1 --  Transition:: t2_1
( 2  ⋁   0  1  2  --  b: 0 --  Transition:: t1_2
( 1  ⋁   0        --  b: 1 --  Location:: le
( 0  ⋁   0  1  2  --  b: 1 --  Location:: b2
( Banged Prune Tree, current length is 5
( in unrelated transition
( 4  ⋁   0  1 [2] --  b: 0 --  Location:: b1
( 3  ⋁  [0] 1  2  --  b: 1 --  Transition:: t2_1
( 2  ⋁  [0] 1  2  --  b: 0 --  Transition:: t1_2
( 1  ⋁  [0]       --  b: 1 --  Location:: le
( 0  ⋁  [0] 1  2  --  b: 2 --  Location:: b2
( Banged Prune Tree, current length is 5
( in unrelated transition
( 4  ⋁   0  1 [2] --  b: 0 --  Location:: b1
( 3  ⋁  [0] 1  2  --  b: 1 --  Transition:: t2_1
( 2  ⋁  [0] 1  2  --  b: 0 --  Transition:: t1_2
( 1  ⋁  [0]       --  b: 1 --  Location:: le
( 0  ⋁   0 [1] 2  --  b: 3 --  Location:: b2

sequence:20002
/-----------------------------
( Weaved Prune Tree, current length is 5
( 4  ⋁   0  1 [2] --  b: 0 --  Location:: b1
( 3  ⋁  [0] 1  2  --  b: 1 --  Transition:: t2_1
( 2  ⋁  [0] 1  2  --  b: 0 --  Transition:: t1_2
( 1  ⋁  [0]       --  b: 1 --  Location:: le
( 0  ⋁   0  1 [2] --  b: 3 --  Location:: b2
For location: b1
「 l: 0, n: 12, nd: 39 」
> > > Project_by_Kohler(), doing...
< < < Project_by_Kohler(), done!

- Have Collected 4 invariant(s)
- The collect_invariants Time Taken (0.01s) = 0
\-----------------------------
( Banged Prune Tree, current length is 2
( in related transition
( 4  ⋁   0  1 [2] --  b: 0 --  Location:: b1
( 3  ⋁  [0] 1  2  --  b: 2 --  Transition:: t2_1
( 2  ⋁   0  1  2  --  b: 0 --  Transition:: t1_2
( 1  ⋁   0        --  b: 1 --  Location:: le
( 0  ⋁   0  1  2  --  b: 3 --  Location:: b2
( Banged Prune Tree, current length is 2
( in related transition
( 4  ⋁   0  1 [2] --  b: 0 --  Location:: b1
( 3  ⋁   0 [1] 2  --  b: 3 --  Transition:: t2_1
( 2  ⋁   0  1  2  --  b: 0 --  Transition:: t1_2
( 1  ⋁   0        --  b: 1 --  Location:: le
( 0  ⋁   0  1  2  --  b: 3 --  Location:: b2
< < < Tree::dfs_sequences_traverse()
- ( !has_initial_poly_set ) in Location::b2
- ( !has_initial_poly_set ) in Location::le

> > > compute_invariants_by_propagation_with_farkas()
- YES! Initial Location:: b1
- NO. No initial condition in Location::b2
' 1 location [ 0 ] remained in initial_lid

> > > invgen_need_working()
* all_ppg_flag: 0
' 1 location [ 0 ] remained in ppging_lid
< < < invgen_need_working()
/------------------------------(Propagation with Farkas)
' Propagation
' 1 location [ 0 ] remained in ppging_lid
' 1 transition [ 1 ] remained in ppging_tid
= Location b2 is being Propagated:
= From Location invariant b1
  K = 8, I = 15, -C + F >= 2, A >= 1, -C >= -8, F >= 9, 2*C - F >= 0, -A >= -15
= Through Transition relation t1_2: 
  K - W = 0, I - U = 0, F - 2*K + 3*O - R = 0, A - M = -1, -A + I >= 1, -F + 2*K - O >= 0, -F + 3*K - 3*O >= 0, F - 2*K + 2*O >= 1, F - K >= 1
= Propagated Location Initial-value b2
  true
* After intersection 
  W = 8, U = 15, F + 3*O - R = 16, A - M = -1, K = 8, I = 15, -F - 3*O >= -24, A >= 1, F + 2*O >= 17, F >= 9, -A >= -14, -F - O >= -16, -C >= -8, -C + F >= 2, 2*C - F >= 0
* Propagated Initial-value at b2
  K = 8, I = 15, A >= 2, -A >= -15, -3*C + F >= -7, -C + F >= 1, -F >= -8, 2*C - F >= 0
' Farkas
' 1 location [ 1 ] remained in ppged_lid

> > > Location::compute_dual_constraints(), Location: b2's Initialization
- Initial-Value is not empty: 
  K = 8, I = 15, A >= 2, -A >= -15, -3*C + F >= -7, -C + F >= 1, -F >= -8, 2*C - F >= 0
< < < Location::compute_dual_constraints(), Location: b2's Initialization

/ Start to solve Location b2
/ Generate Sequences
> > > Tree::sequences generation()
> > > Tree::one_per_group()

From hb:0 To lb:0
> > > Tree::dfs_sub_sequences_traverse()
( Weaved Prune Tree, current length is 1
( 0  ⋁  [0] 1  2  --  b: 0 --  Location_Intra:: b2
( Weaved Prune Tree, current length is 1
( 0  ⋁   0 [1] 2  --  b: 0 --  Location_Intra:: b2
( Weaved Prune Tree, current length is 1
( 0  ⋁   0  1 [2] --  b: 0 --  Location_Intra:: b2
This sub_sequences invd_vp has weaved:3
< < < Tree::dfs_sub_sequences_traverse()
sub_sequences.size()/capacity():3/4
This PRE_LOC has banged:0

< < < Tree::one_per_group()
< < < Tree::sequences generation()
\ Generate Sequences
\ End to solve Location b2

/ Start to solve Location b2
/ Read(Traverse) Sequences
> > > Tree::dfs_sequences_traverse()

sequence:0
/-----------------------------
( Weaved Prune Tree, current length is 1
( 0  ⋁  [0] 1  2  --  b: 0 --  Location:: b2
For location: b2
「 l: 13, n: 12, nd: 39 」
> > > Project_by_Kohler(), doing...
< < < Project_by_Kohler(), done!

- Have Collected 5 invariant(s)
- The collect_invariants Time Taken (0.01s) = 1
\-----------------------------

sequence:1
/-----------------------------
( Weaved Prune Tree, current length is 1
( 0  ⋁   0 [1] 2  --  b: 0 --  Location:: b2
For location: b2
「 l: 13, n: 12, nd: 39 」
> > > Project_by_Kohler(), doing...
< < < Project_by_Kohler(), done!

- Have Collected 6 invariant(s)
- The collect_invariants Time Taken (0.01s) = 0
\-----------------------------

sequence:2
/-----------------------------
( Weaved Prune Tree, current length is 1
( 0  ⋁   0  1 [2] --  b: 0 --  Location:: b2
For location: b2
「 l: 13, n: 12, nd: 39 」
> > > Project_by_Kohler(), doing...
< < < Project_by_Kohler(), done!

- Have Collected 7 invariant(s)
- The collect_invariants Time Taken (0.01s) = 0
\-----------------------------
< < < Tree::dfs_sequences_traverse()
\ Read(Traverse) Sequences
\ End to solve Location b2
\------------------------------(Propagation with Farkas)

> > > invgen_need_working()
* all_ppg_flag: 1
! invgen is over !
< < < invgen_need_working()
/------------------------------(Propagation to Exit-Location)
= Location le is being Propagated:
= From Location invariant b1
  K = 8, I = 15, -C + F >= 2, A >= 1, -C >= -8, F >= 9, 2*C - F >= 0, -A >= -15
= Through Transition relation t1_e: 
  K - W = 0, F - 2*K + 3*O - R = 0, A - I = 0, A - M = -1, A - U = 0, -F + 2*K - O >= 0, F - 2*K + 2*O >= 1, F - K >= 1
= Propagated Location Invariant le
  true
* After intersection 
  W = 8, U = 15, F + 3*O - R = 16, M = 16, K = 8, I = 15, A = 15, F + 2*O >= 17, F >= 9, -F - O >= -16, 2*C - F >= 0, -C >= -8, -C + F >= 2
* Propagated Invariant at le
  K = 8, A = 16, I = 15, -C + F >= 1, 2*C - F >= 0, -3*C + F >= -7
\------------------------------(Propagation to Exit-Location)
/------------------------------(Propagation to Exit-Location)
= Location le is being Propagated:
= From Location invariant b2
  K = 8, I = 15, -F >= -8, F >= 2, -A >= -15, A >= 2, 2*C - F >= 0, -C >= -8
= Through Transition relation t2_e: 
  K - O = 0, K - W = 0, F + K - R = 0, A - I = 0, A - M = -1, A - U = 0, -F >= 0, -F + K >= 0
= Propagated Location Invariant le
  true
* After intersection 
  false
* Propagated Invariant at le
  false
Redundant: this contains new
\------------------------------(Propagation to Exit-Location)
< < < compute_invariants_by_propagation_with_farkas()
----------------------------- 
| The Locations read in are: 
----------------------------- 

Location: b1
# of variables: 12
「 l: 0, n: 12, nd: 39 」
Initial Condition: [[ 
| 
├ 1 * n -8 = 0 
├ 1 * m -15 = 0 
├ 1 * j -10 = 0 
├ 1 * k -8 = 0 
├ 1 * i -1 = 0 
| 
]]
Invariant: [[ 
| 
├ 1 * n -8 = 0 
├ 1 * m -15 = 0 
├ -1 * k  + 1 * j -2 >= 0
├ 1 * i -1 >= 0
├ -1 * k  + 8 >= 0
├ 1 * j -9 >= 0
├ 2 * k -1 * j  >= 0
├ -1 * i  + 15 >= 0
| 
]]

Location: b2
# of variables: 12
「 l: 13, n: 12, nd: 39 」
Initial Condition: [[ 
| 
├ 1 * n -8 = 0 
├ 1 * m -15 = 0 
├ 1 * i -2 >= 0
├ -1 * i  + 15 >= 0
├ -3 * k  + 1 * j  + 7 >= 0
├ -1 * k  + 1 * j -1 >= 0
├ -1 * j  + 8 >= 0
├ 2 * k -1 * j  >= 0
| 
]]
Invariant: [[ 
| 
├ 1 * n -8 = 0 
├ 1 * m -15 = 0 
├ -1 * j  + 8 >= 0
├ 1 * j -2 >= 0
├ -1 * i  + 15 >= 0
├ 1 * i -2 >= 0
├ 2 * k -1 * j  >= 0
├ -1 * k  + 8 >= 0
| 
]]

Location: le
# of variables: 12
「 l: 26, n: 12, nd: 39 」
[ no initial condition set]
Disjunctive Invariant: [[ 
  
1 * n -8 = 0 
1 * i -16 = 0 
1 * m -15 = 0 
-1 * k  + 1 * j -1 >= 0
2 * k -1 * j  >= 0
-3 * k  + 1 * j  + 7 >= 0
  
]]

/---------------------------------------- 
| Disjunctive Invariants before Program: 
----------------------------------------- 
1 * n -8 = 0 
1 * m -15 = 0 
-1 * k  + 1 * j -2 >= 0
1 * i -1 >= 0
-1 * k  + 8 >= 0
1 * j -9 >= 0
2 * k -1 * j  >= 0
-1 * i  + 15 >= 0
\/
1 * n -8 = 0 
1 * m -15 = 0 
-1 * j  + 8 >= 0
1 * j -2 >= 0
-1 * i  + 15 >= 0
1 * i -2 >= 0
2 * k -1 * j  >= 0
-1 * k  + 8 >= 0
\---------------------------------------- 

/----------------------------- 
| Status after Solver: 
----------------------------- 
| Time Taken Unit: (0.01s)
| # of Contexts generated = 11
|
| # of pruned vcl in intra-transition = 4
| # of pruned nodes by self inspection = 0, Time = 0
| # of pruned by backtracking = 0, Time = 0
| # of merged for sub sequences = 0
|
| t: collect_invariant Time
| w: invariants *weav*ed
| LOC 0: t = 1, w = 4
| LOC 1: t = 0, w = 0
| LOC 2: t = 0, w = 0
| TOTAL: t = 2, w = 7
|
| t: dfs_traverse Time
| b: path *bang*ed
| PRE_0: t = 1, b = 7
| PRE_1: t = 0, b = 0
| PRE_2: t = 0, b = 0
| PST_0: t = 1, b = 7
| PST_1: t = 0, b = 0
| PST_2: t = 0, b = 0
| TOTAL: t = 2, b = 14
|
| TOTAL Time = 15
\----------------------------- 
